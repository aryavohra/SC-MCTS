/home/gzt/anaconda3/envs/reasoners/lib/python3.10/site-packages/xformers/ops/fmha/flash.py:211: FutureWarning: `torch.library.impl_abstract` was renamed to `torch.library.register_fake`. Please use that instead; we will remove `torch.library.impl_abstract` in a future version of PyTorch.
  @torch.library.impl_abstract("xformers_flash::flash_fwd")
/home/gzt/anaconda3/envs/reasoners/lib/python3.10/site-packages/xformers/ops/fmha/flash.py:344: FutureWarning: `torch.library.impl_abstract` was renamed to `torch.library.register_fake`. Please use that instead; we will remove `torch.library.impl_abstract` in a future version of PyTorch.
  @torch.library.impl_abstract("xformers_flash::flash_bwd")

blocksworld:   0%|          | 0/145 [00:00<?, ?it/s]
data idx: 0

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table\nMy goal is to the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 1.3639781475067139s, n_tokens: 459, speed: 0.002971629950995019s/token
output: ['unstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\nstack the red block on top of the blue block\nstack the blue block on top of the orange block\nstack the orange block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the blue block
put down the red block
unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the yellow block
put down the orange block
unstack the yellow block from on top of the red block
put down the yellow block
stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
text (after replacing pick up with pick-up): unstack the red block from on top of the blue block
put down the red block
unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the yellow block
put down the orange block
unstack the yellow block from on top of the red block
put down the yellow block
stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
text (after replacing put down with put-down): unstack the red block from on top of the blue block
put-down the red block
unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the yellow block
put-down the orange block
unstack the yellow block from on top of the red block
put-down the yellow block
stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
text (after replacing stack with stack): unstack the red block from on top of the blue block
put-down the red block
unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the yellow block
put-down the orange block
unstack the yellow block from on top of the red block
put-down the yellow block
stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
text (after replacing unstack with unstack): unstack the red block from on top of the blue block
put-down the red block
unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the yellow block
put-down the orange block
unstack the yellow block from on top of the red block
put-down the yellow block
stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the red block from on top of the blue block', 'put-down the red block', 'unstack the blue block from on top of the orange block', 'put-down the blue block', 'unstack the orange block from on top of the yellow block', 'put-down the orange block', 'unstack the yellow block from on top of the red block', 'put-down the yellow block', 'stack the red block on top of the blue block', 'stack the blue block on top of the orange block', 'stack the orange block on top of the yellow block']
line: unstack the red blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (unstack red blue)
action (formatted): (unstack a b)
plan (updated): (unstack a b)

readable_plan (updated): (unstack red blue)

line: put-down the red blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (put-down red)
action (formatted): (put-down a)
plan (updated): (unstack a b)
(put-down a)

readable_plan (updated): (unstack red blue)
(put-down red)

line: unstack the blue blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (unstack blue orange)
action (formatted): (unstack b c)
plan (updated): (unstack a b)
(put-down a)
(unstack b c)

readable_plan (updated): (unstack red blue)
(put-down red)
(unstack blue orange)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack a b)
(put-down a)
(unstack b c)
(put-down b)

readable_plan (updated): (unstack red blue)
(put-down red)
(unstack blue orange)
(put-down blue)

line: unstack the orange blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (unstack orange yellow)
action (formatted): (unstack c d)
plan (updated): (unstack a b)
(put-down a)
(unstack b c)
(put-down b)
(unstack c d)

readable_plan (updated): (unstack red blue)
(put-down red)
(unstack blue orange)
(put-down blue)
(unstack orange yellow)

line: put-down the orange blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (put-down orange)
action (formatted): (put-down c)
plan (updated): (unstack a b)
(put-down a)
(unstack b c)
(put-down b)
(unstack c d)
(put-down c)

readable_plan (updated): (unstack red blue)
(put-down red)
(unstack blue orange)
(put-down blue)
(unstack orange yellow)
(put-down orange)

line: unstack the yellow blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'red block']
readable_objs: ['yellow', 'red']
objs (mapped): ['d', 'a']
readable_action: (unstack yellow red)
action (formatted): (unstack d a)
plan (updated): (unstack a b)
(put-down a)
(unstack b c)
(put-down b)
(unstack c d)
(put-down c)
(unstack d a)

readable_plan (updated): (unstack red blue)
(put-down red)
(unstack blue orange)
(put-down blue)
(unstack orange yellow)
(put-down orange)
(unstack yellow red)

line: put-down the yellow blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (put-down yellow)
action (formatted): (put-down d)
plan (updated): (unstack a b)
(put-down a)
(unstack b c)
(put-down b)
(unstack c d)
(put-down c)
(unstack d a)
(put-down d)

readable_plan (updated): (unstack red blue)
(put-down red)
(unstack blue orange)
(put-down blue)
(unstack orange yellow)
(put-down orange)
(unstack yellow red)
(put-down yellow)

line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (unstack a b)
(put-down a)
(unstack b c)
(put-down b)
(unstack c d)
(put-down c)
(unstack d a)
(put-down d)
(stack a b)

readable_plan (updated): (unstack red blue)
(put-down red)
(unstack blue orange)
(put-down blue)
(unstack orange yellow)
(put-down orange)
(unstack yellow red)
(put-down yellow)
(stack red blue)

line: stack the blue blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (stack blue orange)
action (formatted): (stack b c)
plan (updated): (unstack a b)
(put-down a)
(unstack b c)
(put-down b)
(unstack c d)
(put-down c)
(unstack d a)
(put-down d)
(stack a b)
(stack b c)

readable_plan (updated): (unstack red blue)
(put-down red)
(unstack blue orange)
(put-down blue)
(unstack orange yellow)
(put-down orange)
(unstack yellow red)
(put-down yellow)
(stack red blue)
(stack blue orange)

line: stack the orange blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (stack orange yellow)
action (formatted): (stack c d)
plan (updated): (unstack a b)
(put-down a)
(unstack b c)
(put-down b)
(unstack c d)
(put-down c)
(unstack d a)
(put-down d)
(stack a b)
(stack b c)
(stack c d)

readable_plan (updated): (unstack red blue)
(put-down red)
(unstack blue orange)
(put-down blue)
(unstack orange yellow)
(put-down orange)
(unstack yellow red)
(put-down yellow)
(stack red blue)
(stack blue orange)
(stack orange yellow)

plan: (unstack a b)
(put-down a)
(unstack b c)
(put-down b)
(unstack c d)
(put-down c)
(unstack d a)
(put-down d)
(stack a b)
(stack b c)
(stack c d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a b)
(put-down a)
(unstack b c)
(put-down b)
(unstack c d)
(put-down c)
(unstack d a)
(put-down d)
(stack a b)
(stack b c)
(stack c d)

response: 























































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
blocksworld:   1%|          | 1/145 [00:01<03:18,  1.38s/it]answer: {'init': 'the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table', 'goal': 'the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block', 'plan': '\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-403.pddl'}
output: unstack the red block from on top of the blue block
put down the red block
unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the yellow block
put down the orange block
unstack the yellow block from on top of the red block
put down the yellow block
stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 1

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on the table\nMy goal is to the orange block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.539710521697998s, n_tokens: 123, speed: 0.004387890420308928s/token
output: ['unstack the blue block from on top of the red block\nput down the blue block\nstack the blue block on top of the orange block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the blue block from on top of the red block
put down the blue block
stack the blue block on top of the orange block
text (after replacing pick up with pick-up): unstack the blue block from on top of the red block
put down the blue block
stack the blue block on top of the orange block
text (after replacing put down with put-down): unstack the blue block from on top of the red block
put-down the blue block
stack the blue block on top of the orange block
text (after replacing stack with stack): unstack the blue block from on top of the red block
put-down the blue block
stack the blue block on top of the orange block
text (after replacing unstack with unstack): unstack the blue block from on top of the red block
put-down the blue block
stack the blue block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the blue block from on top of the red block', 'put-down the blue block', 'stack the blue block on top of the orange block']
line: unstack the blue blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (unstack blue red)
action (formatted): (unstack b a)
blocksworld:   1%|▏         | 2/145 [00:01<02:07,  1.12it/s]plan (updated): (unstack b a)

readable_plan (updated): (unstack blue red)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack b a)
(put-down b)

readable_plan (updated): (unstack blue red)
(put-down blue)

line: stack the blue blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (stack blue orange)
action (formatted): (stack b c)
plan (updated): (unstack b a)
(put-down b)
(stack b c)

readable_plan (updated): (unstack blue red)
(put-down blue)
(stack blue orange)

plan: (unstack b a)
(put-down b)
(stack b c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack b a)
(put-down b)
(stack b c)

response: 

















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on the table', 'goal': 'the orange block is on top of the blue block', 'plan': '\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic_3/instance-26.pddl'}
output: unstack the blue block from on top of the red block
put down the blue block
stack the blue block on top of the orange block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 2

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table\nMy goal is to the blue block is on top of the yellow block and the orange block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 1.1787519454956055s, n_tokens: 284, speed: 0.004150535019350724s/token
output: ['unstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the red block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the red block
blocksworld:   2%|▏         | 3/145 [00:03<02:25,  1.03s/it]text (after replacing pick up with pick-up): unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the red block
text (after replacing put down with put-down): unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the red block
text (after replacing stack with stack): unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the red block
text (after replacing unstack with unstack): unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the red block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the yellow block from on top of the blue block', 'stack the yellow block on top of the orange block', 'unstack the blue block from on top of the orange block', 'put-down the blue block', 'unstack the orange block from on top of the red block', 'stack the orange block on top of the red block']
line: unstack the yellow blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'blue block']
readable_objs: ['yellow', 'blue']
objs (mapped): ['d', 'b']
readable_action: (unstack yellow blue)
action (formatted): (unstack d b)
plan (updated): (unstack d b)

readable_plan (updated): (unstack yellow blue)

line: stack the yellow blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (stack yellow orange)
action (formatted): (stack d c)
plan (updated): (unstack d b)
(stack d c)

readable_plan (updated): (unstack yellow blue)
(stack yellow orange)

line: unstack the blue blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (unstack blue orange)
action (formatted): (unstack b c)
plan (updated): (unstack d b)
(stack d c)
(unstack b c)

readable_plan (updated): (unstack yellow blue)
(stack yellow orange)
(unstack blue orange)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack d b)
(stack d c)
(unstack b c)
(put-down b)

readable_plan (updated): (unstack yellow blue)
(stack yellow orange)
(unstack blue orange)
(put-down blue)

line: unstack the orange blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'red block']
readable_objs: ['orange', 'red']
objs (mapped): ['c', 'a']
readable_action: (unstack orange red)
action (formatted): (unstack c a)
plan (updated): (unstack d b)
(stack d c)
(unstack b c)
(put-down b)
(unstack c a)

readable_plan (updated): (unstack yellow blue)
(stack yellow orange)
(unstack blue orange)
(put-down blue)
(unstack orange red)

line: stack the orange blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'red block']
readable_objs: ['orange', 'red']
objs (mapped): ['c', 'a']
readable_action: (stack orange red)
action (formatted): (stack c a)
plan (updated): (unstack d b)
(stack d c)
(unstack b c)
(put-down b)
(unstack c a)
(stack c a)

readable_plan (updated): (unstack yellow blue)
(stack yellow orange)
(unstack blue orange)
(put-down blue)
(unstack orange red)
(stack orange red)

plan: (unstack d b)
(stack d c)
(unstack b c)
(put-down b)
(unstack c a)
(stack c a)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack d b)
(stack d c)
(unstack b c)
(put-down b)
(unstack c a)
(stack c a)

response: 




















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table', 'goal': 'the blue block is on top of the yellow block and the orange block is on top of the blue block', 'plan': '\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-411.pddl'}
output: unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the red block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 3

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table\nMy goal is to the blue block is on top of the red block and the orange block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 1.003129482269287s, n_tokens: 304, speed: 0.0032997680337805498s/token
output: ['unstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the orange block from on top of the yellow block
put down the orange block
unstack the yellow block from on top of the blue block
put down the yellow block
pick up the blue block
stack the blue block on top of the red block
pick up the orange block
stack the orange block on top of the blue block
text (after replacing pick up with pick-up): unstack the orange block from on top of the yellow block
put down the orange block
unstack the yellow block from on top of the blue block
put down the yellow block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing put down with put-down): unstack the orange block from on top of the yellow block
put-down the orange block
unstack the yellow block from on top of the blue block
put-down the yellow block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing stack with stack): unstack the orange block from on top of the yellow block
put-down the orange block
unstack the yellow block from on top of the blue block
put-down the yellow block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing unstack with unstack): unstack the orange block from on top of the yellow block
put-down the orange block
unstack the yellow block from on top of the blue block
put-down the yellow block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the blue block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the orange block from on top of the yellow block', 'put-down the orange block', 'unstack the yellow block from on top of the blue block', 'put-down the yellow block', 'pick-up the blue block', 'stack the blue block on top of the red block', 'pick-up the orange block', 'stack the orange block on top of the blue block']
line: unstack the orange blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (unstack orange yellow)
action (formatted): (unstack c d)
plan (updated): (unstack c d)

readable_plan (updated): (unstack orange yellow)

line: put-down the orange blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (put-down orange)
action (formatted): (put-down c)
plan (updated): (unstack c d)
(put-down c)

readable_plan (updated): (unstack orange yellow)
(put-down orange)

line: unstack the yellow blockk from on top of the blue blockk
action_list: [False, False, False, True]
blocksworld:   3%|▎         | 4/145 [00:04<02:24,  1.02s/it]action: unstack
n_objs: 2
objs: ['yellow block', 'blue block']
readable_objs: ['yellow', 'blue']
objs (mapped): ['d', 'b']
readable_action: (unstack yellow blue)
action (formatted): (unstack d b)
plan (updated): (unstack c d)
(put-down c)
(unstack d b)

readable_plan (updated): (unstack orange yellow)
(put-down orange)
(unstack yellow blue)

line: put-down the yellow blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (put-down yellow)
action (formatted): (put-down d)
plan (updated): (unstack c d)
(put-down c)
(unstack d b)
(put-down d)

readable_plan (updated): (unstack orange yellow)
(put-down orange)
(unstack yellow blue)
(put-down yellow)

line: pick-up the blue blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (pick-up blue)
action (formatted): (pick-up b)
plan (updated): (unstack c d)
(put-down c)
(unstack d b)
(put-down d)
(pick-up b)

readable_plan (updated): (unstack orange yellow)
(put-down orange)
(unstack yellow blue)
(put-down yellow)
(pick-up blue)

line: stack the blue blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (stack blue red)
action (formatted): (stack b a)
plan (updated): (unstack c d)
(put-down c)
(unstack d b)
(put-down d)
(pick-up b)
(stack b a)

readable_plan (updated): (unstack orange yellow)
(put-down orange)
(unstack yellow blue)
(put-down yellow)
(pick-up blue)
(stack blue red)

line: pick-up the orange blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (pick-up orange)
action (formatted): (pick-up c)
plan (updated): (unstack c d)
(put-down c)
(unstack d b)
(put-down d)
(pick-up b)
(stack b a)
(pick-up c)

readable_plan (updated): (unstack orange yellow)
(put-down orange)
(unstack yellow blue)
(put-down yellow)
(pick-up blue)
(stack blue red)
(pick-up orange)

line: stack the orange blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'blue block']
readable_objs: ['orange', 'blue']
objs (mapped): ['c', 'b']
readable_action: (stack orange blue)
action (formatted): (stack c b)
plan (updated): (unstack c d)
(put-down c)
(unstack d b)
(put-down d)
(pick-up b)
(stack b a)
(pick-up c)
(stack c b)

readable_plan (updated): (unstack orange yellow)
(put-down orange)
(unstack yellow blue)
(put-down yellow)
(pick-up blue)
(stack blue red)
(pick-up orange)
(stack orange blue)

plan: (unstack c d)
(put-down c)
(unstack d b)
(put-down d)
(pick-up b)
(stack b a)
(pick-up c)
(stack c b)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack c d)
(put-down c)
(unstack d b)
(put-down d)
(pick-up b)
(stack b a)
(pick-up c)
(stack c b)

response: 




















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table', 'goal': 'the blue block is on top of the red block and the orange block is on top of the blue block', 'plan': '\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-36.pddl'}
output: unstack the orange block from on top of the yellow block
put down the orange block
unstack the yellow block from on top of the blue block
put down the yellow block
pick up the blue block
stack the blue block on top of the red block
pick up the orange block
stack the orange block on top of the blue block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 4

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table\nMy goal is to the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.7193348407745361s, n_tokens: 223, speed: 0.003225716774773705s/token
output: ['unstack the blue block from on top of the red block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the blue block from on top of the red block
put down the blue block
pick up the orange block
stack the orange block on top of the blue block
pick up the yellow block
stack the yellow block on top of the orange block
text (after replacing pick up with pick-up): unstack the blue block from on top of the red block
put down the blue block
pick-up the orange block
stack the orange block on top of the blue block
pick-up the yellow block
stack the yellow block on top of the orange block
text (after replacing put down with put-down): unstack the blue block from on top of the red block
put-down the blue block
pick-up the orange block
stack the orange block on top of the blue block
pick-up the yellow block
stack the yellow block on top of the orange block
text (after replacing stack with stack): unstack the blue block from on top of the red block
put-down the blue block
pick-up the orange block
stack the orange block on top of the blue block
pick-up the yellow block
stack the yellow block on top of the orange block
text (after replacing unstack with unstack): unstack the blue block from on top of the red block
put-down the blue block
pick-up the orange block
stack the orange block on top of the blue block
pick-up the yellow block
stack the yellow block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the blue block from on top of the red block', 'put-down the blue block', 'pick-up the orange block', 'stack the orange block on top of the blue block', 'pick-up the yellow block', 'stack the yellow block on top of the orange block']
line: unstack the blue blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (unstack blue red)
action (formatted): (unstack b a)
plan (updated): (unstack b a)

readable_plan (updated): (unstack blue red)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack b a)
(put-down b)

readable_plan (updated): (unstack blue red)
(put-down blue)

line: pick-up the orange blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (pick-up orange)
action (formatted): (pick-up c)
plan (updated): (unstack b a)
(put-down b)
(pick-up c)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up orange)

line: stack the orange blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'blue block']
readable_objs: ['orange', 'blue']
blocksworld:   3%|▎         | 5/145 [00:04<02:08,  1.09it/s]objs (mapped): ['c', 'b']
readable_action: (stack orange blue)
action (formatted): (stack c b)
plan (updated): (unstack b a)
(put-down b)
(pick-up c)
(stack c b)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up orange)
(stack orange blue)

line: pick-up the yellow blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (pick-up yellow)
action (formatted): (pick-up d)
plan (updated): (unstack b a)
(put-down b)
(pick-up c)
(stack c b)
(pick-up d)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up orange)
(stack orange blue)
(pick-up yellow)

line: stack the yellow blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (stack yellow orange)
action (formatted): (stack d c)
plan (updated): (unstack b a)
(put-down b)
(pick-up c)
(stack c b)
(pick-up d)
(stack d c)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up orange)
(stack orange blue)
(pick-up yellow)
(stack yellow orange)

plan: (unstack b a)
(put-down b)
(pick-up c)
(stack c b)
(pick-up d)
(stack d c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack b a)
(put-down b)
(pick-up c)
(stack c b)
(pick-up d)
(stack d c)

response: 





















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table', 'goal': 'the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block', 'plan': '\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-410.pddl'}
output: unstack the blue block from on top of the red block
put down the blue block
pick up the orange block
stack the orange block on top of the blue block
pick up the yellow block
stack the yellow block on top of the orange block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 5

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block and the red block is on the table\nMy goal is to the orange block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.42636823654174805s, n_tokens: 68, speed: 0.006270121125613942s/token
output: ['pick up the red block\nstack the red block on top of the orange block']
blocksworld:   4%|▍         | 6/145 [00:05<01:44,  1.33it/s]

============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: pick up the red block
stack the red block on top of the orange block
text (after replacing pick up with pick-up): pick-up the red block
stack the red block on top of the orange block
text (after replacing put down with put-down): pick-up the red block
stack the red block on top of the orange block
text (after replacing stack with stack): pick-up the red block
stack the red block on top of the orange block
text (after replacing unstack with unstack): pick-up the red block
stack the red block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['pick-up the red block', 'stack the red block on top of the orange block']
line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (pick-up a)

readable_plan (updated): (pick-up red)

line: stack the red blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'orange block']
readable_objs: ['red', 'orange']
objs (mapped): ['a', 'c']
readable_action: (stack red orange)
action (formatted): (stack a c)
plan (updated): (pick-up a)
(stack a c)

readable_plan (updated): (pick-up red)
(stack red orange)

plan: (pick-up a)
(stack a c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (pick-up a)
(stack a c)

response: 

















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block and the red block is on the table', 'goal': 'the orange block is on top of the red block', 'plan': '\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block and the red block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic_3/instance-97.pddl'}
output: pick up the red block
stack the red block on top of the orange block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 6

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table\nMy goal is to the blue block is on top of the yellow block and the yellow block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.4359242916107178s, n_tokens: 98, speed: 0.004448207057252222s/token
output: ['unstack the red block from on top of the yellow block\nstack the red block on top of the blue block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the yellow block
stack the red block on top of the blue block
text (after replacing pick up with pick-up): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
text (after replacing put down with put-down): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
text (after replacing stack with stack): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
text (after replacing unstack with unstack): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the red block from on top of the yellow block', 'stack the red block on top of the blue block']
line: unstack the red blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (unstack red yellow)
action (formatted): (unstack a d)
plan (updated): (unstack a d)

readable_plan (updated): (unstack red yellow)

line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (unstack a d)
(stack a b)

readable_plan (updated): (unstack red yellow)
(stack red blue)

plan: (unstack a d)
(stack a b)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a d)
(stack a b)

response: 




















































Checking plan: tmp_plan.txt
Plan executed successfully - checking goal
Goal not satisfied
Plan invalid


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
blocksworld:   5%|▍         | 7/145 [00:05<01:30,  1.53it/s]answer: {'init': 'the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table', 'goal': 'the blue block is on top of the yellow block and the yellow block is on top of the red block', 'plan': '\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-11.pddl'}
output: unstack the red block from on top of the yellow block
stack the red block on top of the blue block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 7

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the blue block is on the table, the orange block is on the table and the white block is on the table\nMy goal is to the red block is on top of the yellow block and the white block is on top of the orange block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 1.382366418838501s, n_tokens: 429, speed: 0.0032222993446118903s/token
output: ['unstack the red block from on top of the white block\npick up the red block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the white block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the white block
pick up the red block
stack the red block on top of the blue block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
unstack the orange block from on top of the yellow block
stack the orange block on top of the white block
text (after replacing pick up with pick-up): unstack the red block from on top of the white block
pick-up the red block
stack the red block on top of the blue block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
unstack the orange block from on top of the yellow block
stack the orange block on top of the white block
text (after replacing put down with put-down): unstack the red block from on top of the white block
pick-up the red block
stack the red block on top of the blue block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
unstack the orange block from on top of the yellow block
stack the orange block on top of the white block
text (after replacing stack with stack): unstack the red block from on top of the white block
pick-up the red block
stack the red block on top of the blue block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
unstack the orange block from on top of the yellow block
stack the orange block on top of the white block
text (after replacing unstack with unstack): unstack the red block from on top of the white block
pick-up the red block
stack the red block on top of the blue block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
unstack the orange block from on top of the yellow block
stack the orange block on top of the white block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the red block from on top of the white block', 'pick-up the red block', 'stack the red block on top of the blue block', 'unstack the yellow block from on top of the orange block', 'stack the yellow block on top of the red block', 'unstack the blue block from on top of the red block', 'stack the blue block on top of the orange block', 'unstack the orange block from on top of the yellow block', 'stack the orange block on top of the white block']
line: unstack the red blockk from on top of the white blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'white block']
readable_objs: ['red', 'white']
objs (mapped): ['a', 'e']
readable_action: (unstack red white)
action (formatted): (unstack a e)
plan (updated): (unstack a e)

readable_plan (updated): (unstack red white)

line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (unstack a e)
(pick-up a)

readable_plan (updated): (unstack red white)
(pick-up red)

line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (unstack a e)
(pick-up a)
(stack a b)

readable_plan (updated): (unstack red white)
(pick-up red)
(stack red blue)

line: unstack the yellow blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (unstack yellow orange)
action (formatted): (unstack d c)
plan (updated): (unstack a e)
(pick-up a)
(stack a b)
(unstack d c)

readable_plan (updated): (unstack red white)
(pick-up red)
(stack red blue)
(unstack yellow orange)

line: stack the yellow blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'red block']
readable_objs: ['yellow', 'red']
objs (mapped): ['d', 'a']
readable_action: (stack yellow red)
action (formatted): (stack d a)
plan (updated): (unstack a e)
(pick-up a)
(stack a b)
(unstack d c)
(stack d a)

readable_plan (updated): (unstack red white)
(pick-up red)
(stack red blue)
(unstack yellow orange)
(stack yellow red)

line: unstack the blue blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (unstack blue red)
action (formatted): (unstack b a)
plan (updated): (unstack a e)
(pick-up a)
(stack a b)
(unstack d c)
(stack d a)
(unstack b a)

readable_plan (updated): (unstack red white)
(pick-up red)
(stack red blue)
(unstack yellow orange)
(stack yellow red)
(unstack blue red)

line: stack the blue blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (stack blue orange)
action (formatted): (stack b c)
plan (updated): (unstack a e)
(pick-up a)
(stack a b)
(unstack d c)
(stack d a)
(unstack b a)
(stack b c)

readable_plan (updated): (unstack red white)
(pick-up red)
(stack red blue)
(unstack yellow orange)
(stack yellow red)
(unstack blue red)
(stack blue orange)

line: unstack the orange blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (unstack orange yellow)
action (formatted): (unstack c d)
plan (updated): (unstack a e)
(pick-up a)
(stack a b)
(unstack d c)
(stack d a)
(unstack b a)
(stack b c)
(unstack c d)

readable_plan (updated): (unstack red white)
(pick-up red)
(stack red blue)
(unstack yellow orange)
(stack yellow red)
(unstack blue red)
(stack blue orange)
(unstack orange yellow)

line: stack the orange blockk on top of the white blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'white block']
readable_objs: ['orange', 'white']
objs (mapped): ['c', 'e']
readable_action: (stack orange white)
action (formatted): (stack c e)
plan (updated): (unstack a e)
(pick-up a)
(stack a b)
(unstack d c)
(stack d a)
(unstack b a)
(stack b c)
(unstack c d)
(stack c e)

readable_plan (updated): (unstack red white)
(pick-up red)
(stack red blue)
(unstack yellow orange)
(stack yellow red)
(unstack blue red)
(stack blue orange)
(unstack orange yellow)
(stack orange white)

plan: (unstack a e)
(pick-up a)
(stack a b)
(unstack d c)
(stack d a)
(unstack b a)
(stack b c)
(unstack c d)
(stack c e)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a e)
(pick-up a)
(stack a b)
(unstack d c)
(stack d a)
(unstack b a)
(stack b c)
(unstack c d)
(stack c e)

response: 






















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
blocksworld:   6%|▌         | 8/145 [00:07<02:01,  1.13it/s]answer: {'init': 'the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the blue block is on the table, the orange block is on the table and the white block is on the table', 'goal': 'the red block is on top of the yellow block and the white block is on top of the orange block', 'plan': '\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the red block from on top of the white block\nstack the red block on top of the yellow block\npick up the white block\nstack the white block on top of the orange block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the blue block is on the table, the orange block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-479.pddl'}
output: unstack the red block from on top of the white block
pick up the red block
stack the red block on top of the blue block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
unstack the orange block from on top of the yellow block
stack the orange block on top of the white block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 8

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table\nMy goal is to the blue block is on top of the yellow block and the yellow block is on top of the orange block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.6574161052703857s, n_tokens: 222, speed: 0.00296133380752426s/token
output: ['unstack the red block from on top of the orange block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the orange block
put down the red block
pick up the yellow block
stack the yellow block on top of the orange block
pick up the blue block
stack the blue block on top of the yellow block
text (after replacing pick up with pick-up): unstack the red block from on top of the orange block
put down the red block
pick-up the yellow block
stack the yellow block on top of the orange block
pick-up the blue block
stack the blue block on top of the yellow block
text (after replacing put down with put-down): unstack the red block from on top of the orange block
put-down the red block
pick-up the yellow block
stack the yellow block on top of the orange block
pick-up the blue block
stack the blue block on top of the yellow block
text (after replacing stack with stack): unstack the red block from on top of the orange block
put-down the red block
pick-up the yellow block
stack the yellow block on top of the orange block
pick-up the blue block
stack the blue block on top of the yellow block
blocksworld:   6%|▌         | 9/145 [00:07<01:51,  1.22it/s]text (after replacing unstack with unstack): unstack the red block from on top of the orange block
put-down the red block
pick-up the yellow block
stack the yellow block on top of the orange block
pick-up the blue block
stack the blue block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the red block from on top of the orange block', 'put-down the red block', 'pick-up the yellow block', 'stack the yellow block on top of the orange block', 'pick-up the blue block', 'stack the blue block on top of the yellow block']
line: unstack the red blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'orange block']
readable_objs: ['red', 'orange']
objs (mapped): ['a', 'c']
readable_action: (unstack red orange)
action (formatted): (unstack a c)
plan (updated): (unstack a c)

readable_plan (updated): (unstack red orange)

line: put-down the red blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (put-down red)
action (formatted): (put-down a)
plan (updated): (unstack a c)
(put-down a)

readable_plan (updated): (unstack red orange)
(put-down red)

line: pick-up the yellow blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (pick-up yellow)
action (formatted): (pick-up d)
plan (updated): (unstack a c)
(put-down a)
(pick-up d)

readable_plan (updated): (unstack red orange)
(put-down red)
(pick-up yellow)

line: stack the yellow blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (stack yellow orange)
action (formatted): (stack d c)
plan (updated): (unstack a c)
(put-down a)
(pick-up d)
(stack d c)

readable_plan (updated): (unstack red orange)
(put-down red)
(pick-up yellow)
(stack yellow orange)

line: pick-up the blue blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (pick-up blue)
action (formatted): (pick-up b)
plan (updated): (unstack a c)
(put-down a)
(pick-up d)
(stack d c)
(pick-up b)

readable_plan (updated): (unstack red orange)
(put-down red)
(pick-up yellow)
(stack yellow orange)
(pick-up blue)

line: stack the blue blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'yellow block']
readable_objs: ['blue', 'yellow']
objs (mapped): ['b', 'd']
readable_action: (stack blue yellow)
action (formatted): (stack b d)
plan (updated): (unstack a c)
(put-down a)
(pick-up d)
(stack d c)
(pick-up b)
(stack b d)

readable_plan (updated): (unstack red orange)
(put-down red)
(pick-up yellow)
(stack yellow orange)
(pick-up blue)
(stack blue yellow)

plan: (unstack a c)
(put-down a)
(pick-up d)
(stack d c)
(pick-up b)
(stack b d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a c)
(put-down a)
(pick-up d)
(stack d c)
(pick-up b)
(stack b d)

response: 




















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table', 'goal': 'the blue block is on top of the yellow block and the yellow block is on top of the orange block', 'plan': '\nunstack the red block from on top of the orange block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-315.pddl'}
output: unstack the red block from on top of the orange block
put down the red block
pick up the yellow block
stack the yellow block on top of the orange block
pick up the blue block
stack the blue block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 9

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table\nMy goal is to the red block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.6376738548278809s, n_tokens: 145, speed: 0.004397750722950903s/token
output: ['unstack the red block from on top of the yellow block\nstack the red block on top of the blue block\nstack the yellow block on top of the red block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the yellow block
stack the red block on top of the blue block
stack the yellow block on top of the red block
text (after replacing pick up with pick-up): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
stack the yellow block on top of the red block
text (after replacing put down with put-down): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
stack the yellow block on top of the red block
text (after replacing stack with stack): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
stack the yellow block on top of the red block
text (after replacing unstack with unstack): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
stack the yellow block on top of the red block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the red block from on top of the yellow block', 'stack the red block on top of the blue block', 'stack the yellow block on top of the red block']
line: unstack the red blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (unstack red yellow)
action (formatted): (unstack a d)
plan (updated): (unstack a d)

readable_plan (updated): (unstack red yellow)

line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (unstack a d)
(stack a b)

readable_plan (updated): (unstack red yellow)
(stack red blue)

line: stack the yellow blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'red block']
readable_objs: ['yellow', 'red']
objs (mapped): ['d', 'a']
readable_action: (stack yellow red)
action (formatted): (stack d a)
plan (updated): (unstack a d)
(stack a b)
(stack d a)

readable_plan (updated): (unstack red yellow)
(stack red blue)
(stack yellow red)

plan: (unstack a d)
(stack a b)
(stack d a)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a d)
(stack a b)
(stack d a)

response: 


















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
blocksworld:   7%|▋         | 10/145 [00:08<01:43,  1.30it/s]answer: {'init': 'the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table', 'goal': 'the red block is on top of the blue block', 'plan': '\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-234.pddl'}
output: unstack the red block from on top of the yellow block
stack the red block on top of the blue block
stack the yellow block on top of the red block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 10

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table\nMy goal is to the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.5855305194854736s, n_tokens: 142, speed: 0.004123454362573758s/token
output: ['stack the red block on top of the blue block\nstack the blue block on top of the orange block\nstack the orange block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
text (after replacing pick up with pick-up): stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
text (after replacing put down with put-down): stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
text (after replacing stack with stack): stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
text (after replacing unstack with unstack): stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['stack the red block on top of the blue block', 'stack the blue block on top of the orange block', 'stack the orange block on top of the yellow block']
line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (stack a b)

readable_plan (updated): (stack red blue)

line: stack the blue blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
blocksworld:   8%|▊         | 11/145 [00:09<01:35,  1.40it/s]objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (stack blue orange)
action (formatted): (stack b c)
plan (updated): (stack a b)
(stack b c)

readable_plan (updated): (stack red blue)
(stack blue orange)

line: stack the orange blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (stack orange yellow)
action (formatted): (stack c d)
plan (updated): (stack a b)
(stack b c)
(stack c d)

readable_plan (updated): (stack red blue)
(stack blue orange)
(stack orange yellow)

plan: (stack a b)
(stack b c)
(stack c d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (stack a b)
(stack b c)
(stack c d)

response: 























































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table', 'goal': 'the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block', 'plan': '\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-353.pddl'}
output: stack the red block on top of the blue block
stack the blue block on top of the orange block
stack the orange block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 11

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table\nMy goal is to the blue block is on top of the red block and the orange block is on top of the yellow block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.7828466892242432s, n_tokens: 219, speed: 0.0035746424165490555s/token
output: ['unstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
blocksworld:   8%|▊         | 12/145 [00:09<01:38,  1.35it/s]raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the orange block
put down the red block
pick up the blue block
stack the blue block on top of the red block
pick up the orange block
stack the orange block on top of the yellow block
text (after replacing pick up with pick-up): unstack the red block from on top of the orange block
put down the red block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the yellow block
text (after replacing put down with put-down): unstack the red block from on top of the orange block
put-down the red block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the yellow block
text (after replacing stack with stack): unstack the red block from on top of the orange block
put-down the red block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the yellow block
text (after replacing unstack with unstack): unstack the red block from on top of the orange block
put-down the red block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the red block from on top of the orange block', 'put-down the red block', 'pick-up the blue block', 'stack the blue block on top of the red block', 'pick-up the orange block', 'stack the orange block on top of the yellow block']
line: unstack the red blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'orange block']
readable_objs: ['red', 'orange']
objs (mapped): ['a', 'c']
readable_action: (unstack red orange)
action (formatted): (unstack a c)
plan (updated): (unstack a c)

readable_plan (updated): (unstack red orange)

line: put-down the red blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (put-down red)
action (formatted): (put-down a)
plan (updated): (unstack a c)
(put-down a)

readable_plan (updated): (unstack red orange)
(put-down red)

line: pick-up the blue blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (pick-up blue)
action (formatted): (pick-up b)
plan (updated): (unstack a c)
(put-down a)
(pick-up b)

readable_plan (updated): (unstack red orange)
(put-down red)
(pick-up blue)

line: stack the blue blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (stack blue red)
action (formatted): (stack b a)
plan (updated): (unstack a c)
(put-down a)
(pick-up b)
(stack b a)

readable_plan (updated): (unstack red orange)
(put-down red)
(pick-up blue)
(stack blue red)

line: pick-up the orange blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (pick-up orange)
action (formatted): (pick-up c)
plan (updated): (unstack a c)
(put-down a)
(pick-up b)
(stack b a)
(pick-up c)

readable_plan (updated): (unstack red orange)
(put-down red)
(pick-up blue)
(stack blue red)
(pick-up orange)

line: stack the orange blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (stack orange yellow)
action (formatted): (stack c d)
plan (updated): (unstack a c)
(put-down a)
(pick-up b)
(stack b a)
(pick-up c)
(stack c d)

readable_plan (updated): (unstack red orange)
(put-down red)
(pick-up blue)
(stack blue red)
(pick-up orange)
(stack orange yellow)

plan: (unstack a c)
(put-down a)
(pick-up b)
(stack b a)
(pick-up c)
(stack c d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a c)
(put-down a)
(pick-up b)
(stack b a)
(pick-up c)
(stack c d)

response: 




















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table', 'goal': 'the blue block is on top of the red block and the orange block is on top of the yellow block', 'plan': '\nunstack the red block from on top of the orange block\nput down the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-432.pddl'}
output: unstack the red block from on top of the orange block
put down the red block
pick up the blue block
stack the blue block on top of the red block
pick up the orange block
stack the orange block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 12

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the white block is on top of the red block, the blue block is on the table and the orange block is on the table\nMy goal is to the red block is on top of the white block, the blue block is on top of the yellow block and the yellow block is on top of the orange block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.9015970230102539s, n_tokens: 310, speed: 0.002908377493581464s/token
output: ['unstack the red block from on top of the yellow block\nstack the red block on top of the white block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the white block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the yellow block
stack the red block on top of the white block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the white block
unstack the orange block from on top of the blue block
stack the orange block on top of the yellow block
text (after replacing pick up with pick-up): unstack the red block from on top of the yellow block
stack the red block on top of the white block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the white block
unstack the orange block from on top of the blue block
stack the orange block on top of the yellow block
text (after replacing put down with put-down): unstack the red block from on top of the yellow block
stack the red block on top of the white block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the white block
unstack the orange block from on top of the blue block
stack the orange block on top of the yellow block
text (after replacing stack with stack): unstack the red block from on top of the yellow block
stack the red block on top of the white block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the white block
unstack the orange block from on top of the blue block
stack the orange block on top of the yellow block
text (after replacing unstack with unstack): unstack the red block from on top of the yellow block
stack the red block on top of the white block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the white block
unstack the orange block from on top of the blue block
stack the orange block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the red block from on top of the yellow block', 'stack the red block on top of the white block', 'unstack the yellow block from on top of the orange block', 'stack the yellow block on top of the white block', 'unstack the orange block from on top of the blue block', 'stack the orange block on top of the yellow block']
line: unstack the red blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (unstack red yellow)
action (formatted): (unstack a d)
plan (updated): (unstack a d)

readable_plan (updated): (unstack red yellow)

line: stack the red blockk on top of the white blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
blocksworld:   9%|▉         | 13/145 [00:10<01:44,  1.26it/s]objs: ['red block', 'white block']
readable_objs: ['red', 'white']
objs (mapped): ['a', 'e']
readable_action: (stack red white)
action (formatted): (stack a e)
plan (updated): (unstack a d)
(stack a e)

readable_plan (updated): (unstack red yellow)
(stack red white)

line: unstack the yellow blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (unstack yellow orange)
action (formatted): (unstack d c)
plan (updated): (unstack a d)
(stack a e)
(unstack d c)

readable_plan (updated): (unstack red yellow)
(stack red white)
(unstack yellow orange)

line: stack the yellow blockk on top of the white blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'white block']
readable_objs: ['yellow', 'white']
objs (mapped): ['d', 'e']
readable_action: (stack yellow white)
action (formatted): (stack d e)
plan (updated): (unstack a d)
(stack a e)
(unstack d c)
(stack d e)

readable_plan (updated): (unstack red yellow)
(stack red white)
(unstack yellow orange)
(stack yellow white)

line: unstack the orange blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'blue block']
readable_objs: ['orange', 'blue']
objs (mapped): ['c', 'b']
readable_action: (unstack orange blue)
action (formatted): (unstack c b)
plan (updated): (unstack a d)
(stack a e)
(unstack d c)
(stack d e)
(unstack c b)

readable_plan (updated): (unstack red yellow)
(stack red white)
(unstack yellow orange)
(stack yellow white)
(unstack orange blue)

line: stack the orange blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (stack orange yellow)
action (formatted): (stack c d)
plan (updated): (unstack a d)
(stack a e)
(unstack d c)
(stack d e)
(unstack c b)
(stack c d)

readable_plan (updated): (unstack red yellow)
(stack red white)
(unstack yellow orange)
(stack yellow white)
(unstack orange blue)
(stack orange yellow)

plan: (unstack a d)
(stack a e)
(unstack d c)
(stack d e)
(unstack c b)
(stack c d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a d)
(stack a e)
(unstack d c)
(stack d e)
(unstack c b)
(stack c d)

response: 






















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the white block is on top of the red block, the blue block is on the table and the orange block is on the table', 'goal': 'the red block is on top of the white block, the blue block is on top of the yellow block and the yellow block is on top of the orange block', 'plan': '\nunstack the white block from on top of the red block\nput down the white block\nunstack the red block from on top of the yellow block\nstack the red block on top of the white block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the white block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-473.pddl'}
output: unstack the red block from on top of the yellow block
stack the red block on top of the white block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the white block
unstack the orange block from on top of the blue block
stack the orange block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0*****


data idx: 13

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table\nMy goal is to the blue block is on top of the orange block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.7372593879699707s, n_tokens: 228, speed: 0.0032335938068858362s/token
output: ['unstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the orange block
put down the red block
unstack the orange block from on top of the blue block
put down the orange block
pick up the blue block
stack the blue block on top of the orange block
text (after replacing pick up with pick-up): unstack the red block from on top of the orange block
put down the red block
unstack the orange block from on top of the blue block
put down the orange block
pick-up the blue block
stack the blue block on top of the orange block
text (after replacing put down with put-down): unstack the red block from on top of the orange block
put-down the red block
unstack the orange block from on top of the blue block
put-down the orange block
pick-up the blue block
stack the blue block on top of the orange block
text (after replacing stack with stack): unstack the red block from on top of the orange block
put-down the red block
unstack the orange block from on top of the blue block
put-down the orange block
pick-up the blue block
stack the blue block on top of the orange block
text (after replacing unstack with unstack): unstack the red block from on top of the orange block
put-down the red block
unstack the orange block from on top of the blue block
put-down the orange block
pick-up the blue block
stack the blue block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the red block from on top of the orange block', 'put-down the red block', 'unstack the orange block from on top of the blue block', 'put-down the orange block', 'pick-up the blue block', 'stack the blue block on top of the orange block']
line: unstack the red blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'orange block']
readable_objs: ['red', 'orange']
objs (mapped): ['a', 'c']
readable_action: (unstack red orange)
action (formatted): (unstack a c)
plan (updated): (unstack a c)

readable_plan (updated): (unstack red orange)

line: put-down the red blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (put-down red)
action (formatted): (put-down a)
plan (updated): (unstack a c)
(put-down a)

readable_plan (updated): (unstack red orange)
(put-down red)

line: unstack the orange blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'blue block']
readable_objs: ['orange', 'blue']
objs (mapped): ['c', 'b']
readable_action: (unstack orange blue)
action (formatted): (unstack c b)
plan (updated): (unstack a c)
(put-down a)
(unstack c b)

readable_plan (updated): (unstack red orange)
(put-down red)
(unstack orange blue)

line: put-down the orange blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (put-down orange)
action (formatted): (put-down c)
blocksworld:  10%|▉         | 14/145 [00:11<01:41,  1.29it/s]plan (updated): (unstack a c)
(put-down a)
(unstack c b)
(put-down c)

readable_plan (updated): (unstack red orange)
(put-down red)
(unstack orange blue)
(put-down orange)

line: pick-up the blue blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (pick-up blue)
action (formatted): (pick-up b)
plan (updated): (unstack a c)
(put-down a)
(unstack c b)
(put-down c)
(pick-up b)

readable_plan (updated): (unstack red orange)
(put-down red)
(unstack orange blue)
(put-down orange)
(pick-up blue)

line: stack the blue blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (stack blue orange)
action (formatted): (stack b c)
plan (updated): (unstack a c)
(put-down a)
(unstack c b)
(put-down c)
(pick-up b)
(stack b c)

readable_plan (updated): (unstack red orange)
(put-down red)
(unstack orange blue)
(put-down orange)
(pick-up blue)
(stack blue orange)

plan: (unstack a c)
(put-down a)
(unstack c b)
(put-down c)
(pick-up b)
(stack b c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a c)
(put-down a)
(unstack c b)
(put-down c)
(pick-up b)
(stack b c)

response: 

















































Checking plan: tmp_plan.txt
Plan executed successfully - checking goal
Plan valid
Final value: 6 

Successful plans:
Value: 6
 tmp_plan.txt 6 


============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table', 'goal': 'the blue block is on top of the orange block', 'plan': '\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic_3/instance-22.pddl'}
output: unstack the red block from on top of the orange block
put down the red block
unstack the orange block from on top of the blue block
put down the orange block
pick up the blue block
stack the blue block on top of the orange block
correct: True
============================================================evaluate end============================================================


*****current accuracy: 0.07142857142857142*****


data idx: 14

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table\nMy goal is to the yellow block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.6842682361602783s, n_tokens: 182, speed: 0.0037597155832982325s/token
output: ['unstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
blocksworld:  10%|█         | 15/145 [00:12<01:37,  1.33it/s]actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
text (after replacing pick up with pick-up): unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
text (after replacing put down with put-down): unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
text (after replacing stack with stack): unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
text (after replacing unstack with unstack): unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the blue block from on top of the orange block', 'put-down the blue block', 'unstack the orange block from on top of the red block', 'stack the orange block on top of the yellow block']
line: unstack the blue blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (unstack blue orange)
action (formatted): (unstack b c)
plan (updated): (unstack b c)

readable_plan (updated): (unstack blue orange)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack b c)
(put-down b)

readable_plan (updated): (unstack blue orange)
(put-down blue)

line: unstack the orange blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'red block']
readable_objs: ['orange', 'red']
objs (mapped): ['c', 'a']
readable_action: (unstack orange red)
action (formatted): (unstack c a)
plan (updated): (unstack b c)
(put-down b)
(unstack c a)

readable_plan (updated): (unstack blue orange)
(put-down blue)
(unstack orange red)

line: stack the orange blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (stack orange yellow)
action (formatted): (stack c d)
plan (updated): (unstack b c)
(put-down b)
(unstack c a)
(stack c d)

readable_plan (updated): (unstack blue orange)
(put-down blue)
(unstack orange red)
(stack orange yellow)

plan: (unstack b c)
(put-down b)
(unstack c a)
(stack c d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack b c)
(put-down b)
(unstack c a)
(stack c d)

response: 



















































Checking plan: tmp_plan.txt
Plan executed successfully - checking goal
Goal not satisfied
Plan invalid


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table', 'goal': 'the yellow block is on top of the red block', 'plan': '\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-188.pddl'}
output: unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.06666666666666667*****


data idx: 15

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table\nMy goal is to the orange block is on top of the red block and the yellow block is on top of the orange block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.5264229774475098s, n_tokens: 143, speed: 0.0036812795625699984s/token
output: ['pick up the yellow block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: pick up the yellow block
stack the yellow block on top of the orange block
pick up the red block
stack the red block on top of the yellow block
text (after replacing pick up with pick-up): pick-up the yellow block
stack the yellow block on top of the orange block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing put down with put-down): pick-up the yellow block
stack the yellow block on top of the orange block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing stack with stack): pick-up the yellow block
stack the yellow block on top of the orange block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing unstack with unstack): pick-up the yellow block
stack the yellow block on top of the orange block
pick-up the red block
stack the red block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['pick-up the yellow block', 'stack the yellow block on top of the orange block', 'pick-up the red block', 'stack the red block on top of the yellow block']
line: pick-up the yellow blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (pick-up yellow)
action (formatted): (pick-up d)
plan (updated): (pick-up d)

readable_plan (updated): (pick-up yellow)

line: stack the yellow blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (stack yellow orange)
action (formatted): (stack d c)
plan (updated): (pick-up d)
(stack d c)

readable_plan (updated): (pick-up yellow)
(stack yellow orange)

line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (pick-up d)
(stack d c)
(pick-up a)

readable_plan (updated): (pick-up yellow)
(stack yellow orange)
(pick-up red)

line: stack the red blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (stack red yellow)
action (formatted): (stack a d)
plan (updated): (pick-up d)
(stack d c)
(pick-up a)
(stack a d)

readable_plan (updated): (pick-up yellow)
(stack yellow orange)
(pick-up red)
(stack red yellow)

plan: (pick-up d)
(stack d c)
(pick-up a)
(stack a d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
blocksworld:  11%|█         | 16/145 [00:12<01:28,  1.45it/s]============================================================validate_plan开始============================================================
plan: (pick-up d)
(stack d c)
(pick-up a)
(stack a d)

response: 




















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table', 'goal': 'the orange block is on top of the red block and the yellow block is on top of the orange block', 'plan': '\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-82.pddl'}
output: pick up the yellow block
stack the yellow block on top of the orange block
pick up the red block
stack the red block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.0625*****


data idx: 16

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on the table\nMy goal is to the red block is on top of the blue block and the orange block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.6400258541107178s, n_tokens: 147, speed: 0.004353917374902842s/token
output: ['unstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the blue block
put down the red block
pick up the orange block
stack the orange block on top of the blue block
text (after replacing pick up with pick-up): unstack the red block from on top of the blue block
put down the red block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing put down with put-down): unstack the red block from on top of the blue block
put-down the red block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing stack with stack): unstack the red block from on top of the blue block
put-down the red block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing unstack with unstack): unstack the red block from on top of the blue block
put-down the red block
pick-up the orange block
stack the orange block on top of the blue block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
blocksworld:  12%|█▏        | 17/145 [00:13<01:26,  1.48it/s]lines: ['unstack the red block from on top of the blue block', 'put-down the red block', 'pick-up the orange block', 'stack the orange block on top of the blue block']
line: unstack the red blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (unstack red blue)
action (formatted): (unstack a b)
plan (updated): (unstack a b)

readable_plan (updated): (unstack red blue)

line: put-down the red blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (put-down red)
action (formatted): (put-down a)
plan (updated): (unstack a b)
(put-down a)

readable_plan (updated): (unstack red blue)
(put-down red)

line: pick-up the orange blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (pick-up orange)
action (formatted): (pick-up c)
plan (updated): (unstack a b)
(put-down a)
(pick-up c)

readable_plan (updated): (unstack red blue)
(put-down red)
(pick-up orange)

line: stack the orange blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'blue block']
readable_objs: ['orange', 'blue']
objs (mapped): ['c', 'b']
readable_action: (stack orange blue)
action (formatted): (stack c b)
plan (updated): (unstack a b)
(put-down a)
(pick-up c)
(stack c b)

readable_plan (updated): (unstack red blue)
(put-down red)
(pick-up orange)
(stack orange blue)

plan: (unstack a b)
(put-down a)
(pick-up c)
(stack c b)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a b)
(put-down a)
(pick-up c)
(stack c b)

response: 


















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on the table', 'goal': 'the red block is on top of the blue block and the orange block is on top of the red block', 'plan': '\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic_3/instance-54.pddl'}
output: unstack the red block from on top of the blue block
put down the red block
pick up the orange block
stack the orange block on top of the blue block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.058823529411764705*****


data idx: 17

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table\nMy goal is to the red block is on top of the yellow block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 2.329338312149048s, n_tokens: 826, speed: 0.0028200221696719706s/token
output: ['stack the blue block on top of the orange block\nunstack the blue block from on top of the orange block\nstack the orange block on top of the yellow block\nunstack the orange block from on top of the yellow block\nstack the blue block on top of the yellow block\nstack the blue block on top of the orange block\nstack the blue block on top of the red block\npick up the blue block\npick up the orange block\npick up the yellow block\nstack the yellow block on top of the red block\nstack the yellow block on top of the blue block\nSTACK THE RED BLOCK ON TOP OF THE BLUE BLOCK\nSTACK THE RED BLOCK ON TOP OF THE YELLOW BLOCK\nSTACK THE RED BLOCK ON TOP OF THE ORANGE BLOCK\nSTACK THE RED BLOCK ON TOP OF THE BLUE BLOCK\nSTACK THE RED BLOCK ON TOP OF THE YELLOW BLOCK\nSTACK THE RED BLOCK ON TOP OF THE ORANGE BLOCK\nSTACK THE RED BLOCK ON TOP OF']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: stack the blue block on top of the orange block
unstack the blue block from on top of the orange block
stack the orange block on top of the yellow block
unstack the orange block from on top of the yellow block
stack the blue block on top of the yellow block
stack the blue block on top of the orange block
stack the blue block on top of the red block
pick up the blue block
pick up the orange block
pick up the yellow block
stack the yellow block on top of the red block
stack the yellow block on top of the blue block
stack the red block on top of the blue block
stack the red block on top of the yellow block
stack the red block on top of the orange block
stack the red block on top of the blue block
stack the red block on top of the yellow block
stack the red block on top of the orange block
stack the red block on top of
text (after replacing pick up with pick-up): stack the blue block on top of the orange block
unstack the blue block from on top of the orange block
stack the orange block on top of the yellow block
unstack the orange block from on top of the yellow block
stack the blue block on top of the yellow block
stack the blue block on top of the orange block
stack the blue block on top of the red block
pick-up the blue block
pick-up the orange block
pick-up the yellow block
stack the yellow block on top of the red block
stack the yellow block on top of the blue block
stack the red block on top of the blue block
stack the red block on top of the yellow block
stack the red block on top of the orange block
stack the red block on top of the blue block
stack the red block on top of the yellow block
stack the red block on top of the orange block
stack the red block on top of
text (after replacing put down with put-down): stack the blue block on top of the orange block
unstack the blue block from on top of the orange block
stack the orange block on top of the yellow block
unstack the orange block from on top of the yellow block
stack the blue block on top of the yellow block
stack the blue block on top of the orange block
stack the blue block on top of the red block
pick-up the blue block
pick-up the orange block
pick-up the yellow block
stack the yellow block on top of the red block
stack the yellow block on top of the blue block
stack the red block on top of the blue block
stack the red block on top of the yellow block
stack the red block on top of the orange block
stack the red block on top of the blue block
stack the red block on top of the yellow block
stack the red block on top of the orange block
stack the red block on top of
text (after replacing stack with stack): stack the blue block on top of the orange block
unstack the blue block from on top of the orange block
stack the orange block on top of the yellow block
unstack the orange block from on top of the yellow block
stack the blue block on top of the yellow block
stack the blue block on top of the orange block
stack the blue block on top of the red block
pick-up the blue block
pick-up the orange block
pick-up the yellow block
stack the yellow block on top of the red block
stack the yellow block on top of the blue block
stack the red block on top of the blue block
stack the red block on top of the yellow block
stack the red block on top of the orange block
stack the red block on top of the blue block
stack the red block on top of the yellow block
stack the red block on top of the orange block
stack the red block on top of
text (after replacing unstack with unstack): stack the blue block on top of the orange block
unstack the blue block from on top of the orange block
stack the orange block on top of the yellow block
unstack the orange block from on top of the yellow block
stack the blue block on top of the yellow block
stack the blue block on top of the orange block
stack the blue block on top of the red block
pick-up the blue block
pick-up the orange block
pick-up the yellow block
stack the yellow block on top of the red block
stack the yellow block on top of the blue block
stack the red block on top of the blue block
stack the red block on top of the yellow block
stack the red block on top of the orange block
stack the red block on top of the blue block
stack the red block on top of the yellow block
stack the red block on top of the orange block
stack the red block on top of
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['stack the blue block on top of the orange block', 'unstack the blue block from on top of the orange block', 'stack the orange block on top of the yellow block', 'unstack the orange block from on top of the yellow block', 'stack the blue block on top of the yellow block', 'stack the blue block on top of the orange block', 'stack the blue block on top of the red block', 'pick-up the blue block', 'pick-up the orange block', 'pick-up the yellow block', 'stack the yellow block on top of the red block', 'stack the yellow block on top of the blue block', 'stack the red block on top of the blue block', 'stack the red block on top of the yellow block', 'stack the red block on top of the orange block', 'stack the red block on top of the blue block', 'stack the red block on top of the yellow block', 'stack the red block on top of the orange block', 'stack the red block on top of']
line: stack the blue blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (stack blue orange)
action (formatted): (stack b c)
plan (updated): (stack b c)

readable_plan (updated): (stack blue orange)

line: unstack the blue blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (unstack blue orange)
action (formatted): (unstack b c)
plan (updated): (stack b c)
(unstack b c)

readable_plan (updated): (stack blue orange)
(unstack blue orange)

line: stack the orange blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (stack orange yellow)
action (formatted): (stack c d)
plan (updated): (stack b c)
(unstack b c)
(stack c d)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)

line: unstack the orange blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (unstack orange yellow)
action (formatted): (unstack c d)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)

line: stack the blue blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'yellow block']
readable_objs: ['blue', 'yellow']
objs (mapped): ['b', 'd']
readable_action: (stack blue yellow)
action (formatted): (stack b d)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)

line: stack the blue blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (stack blue orange)
action (formatted): (stack b c)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)

line: stack the blue blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (stack blue red)
action (formatted): (stack b a)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)

line: pick-up the blue blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (pick-up blue)
action (formatted): (pick-up b)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)

line: pick-up the orange blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (pick-up orange)
action (formatted): (pick-up c)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)
(pick-up orange)

line: pick-up the yellow blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (pick-up yellow)
action (formatted): (pick-up d)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)
(pick-up orange)
(pick-up yellow)

line: stack the yellow blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'red block']
readable_objs: ['yellow', 'red']
objs (mapped): ['d', 'a']
readable_action: (stack yellow red)
action (formatted): (stack d a)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)
(stack d a)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)
(pick-up orange)
(pick-up yellow)
(stack yellow red)

line: stack the yellow blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'blue block']
readable_objs: ['yellow', 'blue']
objs (mapped): ['d', 'b']
readable_action: (stack yellow blue)
action (formatted): (stack d b)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)
(stack d a)
(stack d b)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)
(pick-up orange)
(pick-up yellow)
(stack yellow red)
(stack yellow blue)

line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)
(stack d a)
(stack d b)
(stack a b)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)
(pick-up orange)
(pick-up yellow)
(stack yellow red)
(stack yellow blue)
(stack red blue)

line: stack the red blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (stack red yellow)
action (formatted): (stack a d)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)
(stack d a)
(stack d b)
(stack a b)
(stack a d)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)
(pick-up orange)
(pick-up yellow)
(stack yellow red)
(stack yellow blue)
(stack red blue)
(stack red yellow)

line: stack the red blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'orange block']
readable_objs: ['red', 'orange']
objs (mapped): ['a', 'c']
readable_action: (stack red orange)
action (formatted): (stack a c)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)
(stack d a)
(stack d b)
(stack a b)
(stack a d)
(stack a c)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)
(pick-up orange)
(pick-up yellow)
(stack yellow red)
(stack yellow blue)
(stack red blue)
(stack red yellow)
(stack red orange)

line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)
(stack d a)
(stack d b)
(stack a b)
(stack a d)
(stack a c)
(stack a b)

blocksworld:  12%|█▏        | 18/145 [00:15<02:29,  1.18s/it]readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)
(pick-up orange)
(pick-up yellow)
(stack yellow red)
(stack yellow blue)
(stack red blue)
(stack red yellow)
(stack red orange)
(stack red blue)

line: stack the red blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (stack red yellow)
action (formatted): (stack a d)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)
(stack d a)
(stack d b)
(stack a b)
(stack a d)
(stack a c)
(stack a b)
(stack a d)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)
(pick-up orange)
(pick-up yellow)
(stack yellow red)
(stack yellow blue)
(stack red blue)
(stack red yellow)
(stack red orange)
(stack red blue)
(stack red yellow)

line: stack the red blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'orange block']
readable_objs: ['red', 'orange']
objs (mapped): ['a', 'c']
readable_action: (stack red orange)
action (formatted): (stack a c)
plan (updated): (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)
(stack d a)
(stack d b)
(stack a b)
(stack a d)
(stack a c)
(stack a b)
(stack a d)
(stack a c)

readable_plan (updated): (stack blue orange)
(unstack blue orange)
(stack orange yellow)
(unstack orange yellow)
(stack blue yellow)
(stack blue orange)
(stack blue red)
(pick-up blue)
(pick-up orange)
(pick-up yellow)
(stack yellow red)
(stack yellow blue)
(stack red blue)
(stack red yellow)
(stack red orange)
(stack red blue)
(stack red yellow)
(stack red orange)

line: stack the red blockk on top of
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block']
plan: (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)
(stack d a)
(stack d b)
(stack a b)
(stack a d)
(stack a c)
(stack a b)
(stack a d)
(stack a c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (stack b c)
(unstack b c)
(stack c d)
(unstack c d)
(stack b d)
(stack b c)
(stack b a)
(pick-up b)
(pick-up c)
(pick-up d)
(stack d a)
(stack d b)
(stack a b)
(stack a d)
(stack a c)
(stack a b)
(stack a d)
(stack a c)

response: 



















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table', 'goal': 'the red block is on top of the yellow block', 'plan': '\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-183.pddl'}
output: stack the blue block on top of the orange block
unstack the blue block from on top of the orange block
stack the orange block on top of the yellow block
unstack the orange block from on top of the yellow block
stack the blue block on top of the yellow block
stack the blue block on top of the orange block
stack the blue block on top of the red block
pick up the blue block
pick up the orange block
pick up the yellow block
stack the yellow block on top of the red block
stack the yellow block on top of the blue block
STACK THE RED BLOCK ON TOP OF THE BLUE BLOCK
STACK THE RED BLOCK ON TOP OF THE YELLOW BLOCK
STACK THE RED BLOCK ON TOP OF THE ORANGE BLOCK
STACK THE RED BLOCK ON TOP OF THE BLUE BLOCK
STACK THE RED BLOCK ON TOP OF THE YELLOW BLOCK
STACK THE RED BLOCK ON TOP OF THE ORANGE BLOCK
STACK THE RED BLOCK ON TOP OF
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.05555555555555555*****


data idx: 18

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table\nMy goal is to the blue block is on top of the orange block and the yellow block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.5426819324493408s, n_tokens: 154, speed: 0.003523908652268447s/token
output: ['unstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nput down the red block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the yellow block from on top of the red block
put down the yellow block
unstack the red block from on top of the blue block
put down the red block
text (after replacing pick up with pick-up): unstack the yellow block from on top of the red block
put down the yellow block
unstack the red block from on top of the blue block
put down the red block
text (after replacing put down with put-down): unstack the yellow block from on top of the red block
put-down the yellow block
unstack the red block from on top of the blue block
put-down the red block
text (after replacing stack with stack): unstack the yellow block from on top of the red block
put-down the yellow block
unstack the red block from on top of the blue block
put-down the red block
text (after replacing unstack with unstack): unstack the yellow block from on top of the red block
put-down the yellow block
unstack the red block from on top of the blue block
put-down the red block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the yellow block from on top of the red block', 'put-down the yellow block', 'unstack the red block from on top of the blue block', 'put-down the red block']
line: unstack the yellow blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'red block']
readable_objs: ['yellow', 'red']
objs (mapped): ['d', 'a']
readable_action: (unstack yellow red)
action (formatted): (unstack d a)
plan (updated): (unstack d a)

readable_plan (updated): (unstack yellow red)

line: put-down the yellow blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (put-down yellow)
action (formatted): (put-down d)
plan (updated): (unstack d a)
(put-down d)

readable_plan (updated): (unstack yellow red)
(put-down yellow)

line: unstack the red blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (unstack red blue)
action (formatted): (unstack a b)
plan (updated): (unstack d a)
(put-down d)
(unstack a b)

readable_plan (updated): (unstack yellow red)
(put-down yellow)
(unstack red blue)

line: put-down the red blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (put-down red)
action (formatted): (put-down a)
plan (updated): (unstack d a)
(put-down d)
(unstack a b)
(put-down a)

readable_plan (updated): (unstack yellow red)
(put-down yellow)
(unstack red blue)
(put-down red)

plan: (unstack d a)
(put-down d)
(unstack a b)
(put-down a)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack d a)
(put-down d)
(unstack a b)
(put-down a)

blocksworld:  13%|█▎        | 19/145 [00:16<02:04,  1.01it/s]response: 




















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table', 'goal': 'the blue block is on top of the orange block and the yellow block is on top of the red block', 'plan': '\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-23.pddl'}
output: unstack the yellow block from on top of the red block
put down the yellow block
unstack the red block from on top of the blue block
put down the red block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.05263157894736842*****


data idx: 19

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table and the orange block is on the table\nMy goal is to the blue block is on top of the red block and the orange block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.5037105083465576s, n_tokens: 92, speed: 0.005475114221158235s/token
output: ['stack the blue block on top of the red block\nstack the orange block on top of the blue block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: stack the blue block on top of the red block
stack the orange block on top of the blue block
text (after replacing pick up with pick-up): stack the blue block on top of the red block
stack the orange block on top of the blue block
text (after replacing put down with put-down): stack the blue block on top of the red block
stack the orange block on top of the blue block
text (after replacing stack with stack): stack the blue block on top of the red block
stack the orange block on top of the blue block
text (after replacing unstack with unstack): stack the blue block on top of the red block
stack the orange block on top of the blue block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['stack the blue block on top of the red block', 'stack the orange block on top of the blue block']
line: stack the blue blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (stack blue red)
action (formatted): (stack b a)
plan (updated): (stack b a)

readable_plan (updated): (stack blue red)

line: stack the orange blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'blue block']
blocksworld:  14%|█▍        | 20/145 [00:16<01:45,  1.18it/s]readable_objs: ['orange', 'blue']
objs (mapped): ['c', 'b']
readable_action: (stack orange blue)
action (formatted): (stack c b)
plan (updated): (stack b a)
(stack c b)

readable_plan (updated): (stack blue red)
(stack orange blue)

plan: (stack b a)
(stack c b)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (stack b a)
(stack c b)

response: 



















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table and the orange block is on the table', 'goal': 'the blue block is on top of the red block and the orange block is on top of the blue block', 'plan': '\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic_3/instance-75.pddl'}
output: stack the blue block on top of the red block
stack the orange block on top of the blue block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.05*****


data idx: 20

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table\nMy goal is to the red block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.7743134498596191s, n_tokens: 253, speed: 0.003060527469800866s/token
output: ['unstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the yellow block from on top of the blue block
put down the yellow block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
pick up the red block
stack the red block on top of the orange block
text (after replacing pick up with pick-up): unstack the yellow block from on top of the blue block
put down the yellow block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
pick-up the red block
stack the red block on top of the orange block
text (after replacing put down with put-down): unstack the yellow block from on top of the blue block
put-down the yellow block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
pick-up the red block
stack the red block on top of the orange block
blocksworld:  14%|█▍        | 21/145 [00:17<01:42,  1.21it/s]text (after replacing stack with stack): unstack the yellow block from on top of the blue block
put-down the yellow block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
pick-up the red block
stack the red block on top of the orange block
text (after replacing unstack with unstack): unstack the yellow block from on top of the blue block
put-down the yellow block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
pick-up the red block
stack the red block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the yellow block from on top of the blue block', 'put-down the yellow block', 'unstack the orange block from on top of the red block', 'stack the orange block on top of the yellow block', 'pick-up the red block', 'stack the red block on top of the orange block']
line: unstack the yellow blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'blue block']
readable_objs: ['yellow', 'blue']
objs (mapped): ['d', 'b']
readable_action: (unstack yellow blue)
action (formatted): (unstack d b)
plan (updated): (unstack d b)

readable_plan (updated): (unstack yellow blue)

line: put-down the yellow blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (put-down yellow)
action (formatted): (put-down d)
plan (updated): (unstack d b)
(put-down d)

readable_plan (updated): (unstack yellow blue)
(put-down yellow)

line: unstack the orange blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'red block']
readable_objs: ['orange', 'red']
objs (mapped): ['c', 'a']
readable_action: (unstack orange red)
action (formatted): (unstack c a)
plan (updated): (unstack d b)
(put-down d)
(unstack c a)

readable_plan (updated): (unstack yellow blue)
(put-down yellow)
(unstack orange red)

line: stack the orange blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'yellow block']
readable_objs: ['orange', 'yellow']
objs (mapped): ['c', 'd']
readable_action: (stack orange yellow)
action (formatted): (stack c d)
plan (updated): (unstack d b)
(put-down d)
(unstack c a)
(stack c d)

readable_plan (updated): (unstack yellow blue)
(put-down yellow)
(unstack orange red)
(stack orange yellow)

line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (unstack d b)
(put-down d)
(unstack c a)
(stack c d)
(pick-up a)

readable_plan (updated): (unstack yellow blue)
(put-down yellow)
(unstack orange red)
(stack orange yellow)
(pick-up red)

line: stack the red blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'orange block']
readable_objs: ['red', 'orange']
objs (mapped): ['a', 'c']
readable_action: (stack red orange)
action (formatted): (stack a c)
plan (updated): (unstack d b)
(put-down d)
(unstack c a)
(stack c d)
(pick-up a)
(stack a c)

readable_plan (updated): (unstack yellow blue)
(put-down yellow)
(unstack orange red)
(stack orange yellow)
(pick-up red)
(stack red orange)

plan: (unstack d b)
(put-down d)
(unstack c a)
(stack c d)
(pick-up a)
(stack a c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack d b)
(put-down d)
(unstack c a)
(stack c d)
(pick-up a)
(stack a c)

response: 



















































Checking plan: tmp_plan.txt
Plan executed successfully - checking goal
Goal not satisfied
Plan invalid


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table', 'goal': 'the red block is on top of the blue block', 'plan': '\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-175.pddl'}
output: unstack the yellow block from on top of the blue block
put down the yellow block
unstack the orange block from on top of the red block
stack the orange block on top of the yellow block
pick up the red block
stack the red block on top of the orange block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.047619047619047616*****


data idx: 21

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table and the orange block is on the table\nMy goal is to the red block is on top of the orange block and the orange block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.4502594470977783s, n_tokens: 94, speed: 0.004789994118061472s/token
output: ['stack the red block on top of the orange block\nstack the orange block on top of the blue block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: stack the red block on top of the orange block
stack the orange block on top of the blue block
text (after replacing pick up with pick-up): stack the red block on top of the orange block
stack the orange block on top of the blue block
text (after replacing put down with put-down): stack the red block on top of the orange block
stack the orange block on top of the blue block
text (after replacing stack with stack): stack the red block on top of the orange block
stack the orange block on top of the blue block
text (after replacing unstack with unstack): stack the red block on top of the orange block
stack the orange block on top of the blue block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['stack the red block on top of the orange block', 'stack the orange block on top of the blue block']
line: stack the red blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'orange block']
readable_objs: ['red', 'orange']
objs (mapped): ['a', 'c']
readable_action: (stack red orange)
action (formatted): (stack a c)
plan (updated): (stack a c)

readable_plan (updated): (stack red orange)

line: stack the orange blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'blue block']
readable_objs: ['orange', 'blue']
objs (mapped): ['c', 'b']
readable_action: (stack orange blue)
action (formatted): (stack c b)
plan (updated): (stack a c)
(stack c b)

readable_plan (updated): (stack red orange)
(stack orange blue)

plan: (stack a c)
(stack c b)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (stack a c)
(stack c b)

response: 



















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table and the orange block is on the table', 'goal': 'the red block is on top of the orange block and the orange block is on top of the blue block', 'plan': '\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic_3/instance-10.pddl'}
blocksworld:  15%|█▌        | 22/145 [00:18<01:28,  1.39it/s]output: stack the red block on top of the orange block
stack the orange block on top of the blue block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.045454545454545456*****


data idx: 22

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table\nMy goal is to the orange block is on top of the yellow block and the yellow block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.8184714317321777s, n_tokens: 254, speed: 0.0032223284713865266s/token
output: ['unstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the yellow block
put down the red block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the orange block
pick up the blue block
stack the blue block on top of the yellow block
text (after replacing pick up with pick-up): unstack the red block from on top of the yellow block
put down the red block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the orange block
pick-up the blue block
stack the blue block on top of the yellow block
text (after replacing put down with put-down): unstack the red block from on top of the yellow block
put-down the red block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the orange block
pick-up the blue block
stack the blue block on top of the yellow block
text (after replacing stack with stack): unstack the red block from on top of the yellow block
put-down the red block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the orange block
pick-up the blue block
stack the blue block on top of the yellow block
text (after replacing unstack with unstack): unstack the red block from on top of the yellow block
put-down the red block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the orange block
pick-up the blue block
stack the blue block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the red block from on top of the yellow block', 'put-down the red block', 'unstack the yellow block from on top of the orange block', 'stack the yellow block on top of the orange block', 'pick-up the blue block', 'stack the blue block on top of the yellow block']
line: unstack the red blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (unstack red yellow)
action (formatted): (unstack a d)
plan (updated): (unstack a d)

readable_plan (updated): (unstack red yellow)

line: put-down the red blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (put-down red)
action (formatted): (put-down a)
plan (updated): (unstack a d)
(put-down a)

readable_plan (updated): (unstack red yellow)
(put-down red)

line: unstack the yellow blockk from on top of the orange blockk
blocksworld:  16%|█▌        | 23/145 [00:18<01:31,  1.33it/s]action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (unstack yellow orange)
action (formatted): (unstack d c)
plan (updated): (unstack a d)
(put-down a)
(unstack d c)

readable_plan (updated): (unstack red yellow)
(put-down red)
(unstack yellow orange)

line: stack the yellow blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (stack yellow orange)
action (formatted): (stack d c)
plan (updated): (unstack a d)
(put-down a)
(unstack d c)
(stack d c)

readable_plan (updated): (unstack red yellow)
(put-down red)
(unstack yellow orange)
(stack yellow orange)

line: pick-up the blue blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (pick-up blue)
action (formatted): (pick-up b)
plan (updated): (unstack a d)
(put-down a)
(unstack d c)
(stack d c)
(pick-up b)

readable_plan (updated): (unstack red yellow)
(put-down red)
(unstack yellow orange)
(stack yellow orange)
(pick-up blue)

line: stack the blue blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'yellow block']
readable_objs: ['blue', 'yellow']
objs (mapped): ['b', 'd']
readable_action: (stack blue yellow)
action (formatted): (stack b d)
plan (updated): (unstack a d)
(put-down a)
(unstack d c)
(stack d c)
(pick-up b)
(stack b d)

readable_plan (updated): (unstack red yellow)
(put-down red)
(unstack yellow orange)
(stack yellow orange)
(pick-up blue)
(stack blue yellow)

plan: (unstack a d)
(put-down a)
(unstack d c)
(stack d c)
(pick-up b)
(stack b d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a d)
(put-down a)
(unstack d c)
(stack d c)
(pick-up b)
(stack b d)

response: 




















































Checking plan: tmp_plan.txt
Plan executed successfully - checking goal
Goal not satisfied
Plan invalid


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table', 'goal': 'the orange block is on top of the yellow block and the yellow block is on top of the blue block', 'plan': '\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-112.pddl'}
output: unstack the red block from on top of the yellow block
put down the red block
unstack the yellow block from on top of the orange block
stack the yellow block on top of the orange block
pick up the blue block
stack the blue block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.043478260869565216*****


data idx: 23

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table\nMy goal is to the red block is on top of the yellow block and the blue block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 1.0867280960083008s, n_tokens: 326, speed: 0.003333521766896628s/token
output: ['unstack the red block from on top of the yellow block\nstack the red block on top of the blue block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the red block from on top of the yellow block
stack the red block on top of the blue block
unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the red block
put down the orange block
pick up the red block
stack the red block on top of the yellow block
text (after replacing pick up with pick-up): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the red block
put down the orange block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing put down with put-down): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the red block
put-down the orange block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing stack with stack): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the red block
put-down the orange block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing unstack with unstack): unstack the red block from on top of the yellow block
stack the red block on top of the blue block
unstack the blue block from on top of the orange block
put-down the blue block
unstack the orange block from on top of the red block
put-down the orange block
pick-up the red block
stack the red block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the red block from on top of the yellow block', 'stack the red block on top of the blue block', 'unstack the blue block from on top of the orange block', 'put-down the blue block', 'unstack the orange block from on top of the red block', 'put-down the orange block', 'pick-up the red block', 'stack the red block on top of the yellow block']
line: unstack the red blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (unstack red yellow)
action (formatted): (unstack a d)
plan (updated): (unstack a d)

readable_plan (updated): (unstack red yellow)

line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
blocksworld:  17%|█▋        | 24/145 [00:19<01:43,  1.17it/s]plan (updated): (unstack a d)
(stack a b)

readable_plan (updated): (unstack red yellow)
(stack red blue)

line: unstack the blue blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (unstack blue orange)
action (formatted): (unstack b c)
plan (updated): (unstack a d)
(stack a b)
(unstack b c)

readable_plan (updated): (unstack red yellow)
(stack red blue)
(unstack blue orange)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack a d)
(stack a b)
(unstack b c)
(put-down b)

readable_plan (updated): (unstack red yellow)
(stack red blue)
(unstack blue orange)
(put-down blue)

line: unstack the orange blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'red block']
readable_objs: ['orange', 'red']
objs (mapped): ['c', 'a']
readable_action: (unstack orange red)
action (formatted): (unstack c a)
plan (updated): (unstack a d)
(stack a b)
(unstack b c)
(put-down b)
(unstack c a)

readable_plan (updated): (unstack red yellow)
(stack red blue)
(unstack blue orange)
(put-down blue)
(unstack orange red)

line: put-down the orange blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (put-down orange)
action (formatted): (put-down c)
plan (updated): (unstack a d)
(stack a b)
(unstack b c)
(put-down b)
(unstack c a)
(put-down c)

readable_plan (updated): (unstack red yellow)
(stack red blue)
(unstack blue orange)
(put-down blue)
(unstack orange red)
(put-down orange)

line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (unstack a d)
(stack a b)
(unstack b c)
(put-down b)
(unstack c a)
(put-down c)
(pick-up a)

readable_plan (updated): (unstack red yellow)
(stack red blue)
(unstack blue orange)
(put-down blue)
(unstack orange red)
(put-down orange)
(pick-up red)

line: stack the red blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (stack red yellow)
action (formatted): (stack a d)
plan (updated): (unstack a d)
(stack a b)
(unstack b c)
(put-down b)
(unstack c a)
(put-down c)
(pick-up a)
(stack a d)

readable_plan (updated): (unstack red yellow)
(stack red blue)
(unstack blue orange)
(put-down blue)
(unstack orange red)
(put-down orange)
(pick-up red)
(stack red yellow)

plan: (unstack a d)
(stack a b)
(unstack b c)
(put-down b)
(unstack c a)
(put-down c)
(pick-up a)
(stack a d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack a d)
(stack a b)
(unstack b c)
(put-down b)
(unstack c a)
(put-down c)
(pick-up a)
(stack a d)

response: 



















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table', 'goal': 'the red block is on top of the yellow block and the blue block is on top of the red block', 'plan': '\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-387.pddl'}
output: unstack the red block from on top of the yellow block
stack the red block on top of the blue block
unstack the blue block from on top of the orange block
put down the blue block
unstack the orange block from on top of the red block
put down the orange block
pick up the red block
stack the red block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.041666666666666664*****


data idx: 24

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table\nMy goal is to the red block is on top of the yellow block and the yellow block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.5752279758453369s, n_tokens: 147, speed: 0.003913115481941068s/token
output: ['unstack the blue block from on top of the yellow block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the blue block from on top of the yellow block
put down the blue block
pick up the red block
stack the red block on top of the yellow block
text (after replacing pick up with pick-up): unstack the blue block from on top of the yellow block
put down the blue block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing put down with put-down): unstack the blue block from on top of the yellow block
put-down the blue block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing stack with stack): unstack the blue block from on top of the yellow block
put-down the blue block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing unstack with unstack): unstack the blue block from on top of the yellow block
put-down the blue block
pick-up the red block
stack the red block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the blue block from on top of the yellow block', 'put-down the blue block', 'pick-up the red block', 'stack the red block on top of the yellow block']
line: unstack the blue blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'yellow block']
readable_objs: ['blue', 'yellow']
objs (mapped): ['b', 'd']
readable_action: (unstack blue yellow)
action (formatted): (unstack b d)
plan (updated): (unstack b d)

readable_plan (updated): (unstack blue yellow)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack b d)
(put-down b)

readable_plan (updated): (unstack blue yellow)
(put-down blue)

line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (unstack b d)
(put-down b)
(pick-up a)

readable_plan (updated): (unstack blue yellow)
(put-down blue)
(pick-up red)

line: stack the red blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (stack red yellow)
action (formatted): (stack a d)
plan (updated): (unstack b d)
(put-down b)
(pick-up a)
(stack a d)

readable_plan (updated): (unstack blue yellow)
(put-down blue)
(pick-up red)
(stack red yellow)

plan: (unstack b d)
(put-down b)
(pick-up a)
(stack a d)

[+]: Saving plan in tmp_plan.txt
blocksworld:  17%|█▋        | 25/145 [00:20<01:32,  1.29it/s]==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack b d)
(put-down b)
(pick-up a)
(stack a d)

response: 





















































Checking plan: tmp_plan.txt
Plan executed successfully - checking goal
Goal not satisfied
Plan invalid


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table', 'goal': 'the red block is on top of the yellow block and the yellow block is on top of the blue block', 'plan': '\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-159.pddl'}
output: unstack the blue block from on top of the yellow block
put down the blue block
pick up the red block
stack the red block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.04*****


data idx: 25

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table\nMy goal is to the yellow block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.5483677387237549s, n_tokens: 151, speed: 0.0036315744286341384s/token
output: ['unstack the yellow block from on top of the orange block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the yellow block from on top of the orange block
put down the yellow block
pick up the red block
stack the red block on top of the yellow block
text (after replacing pick up with pick-up): unstack the yellow block from on top of the orange block
put down the yellow block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing put down with put-down): unstack the yellow block from on top of the orange block
put-down the yellow block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing stack with stack): unstack the yellow block from on top of the orange block
put-down the yellow block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing unstack with unstack): unstack the yellow block from on top of the orange block
put-down the yellow block
pick-up the red block
stack the red block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
blocksworld:  18%|█▊        | 26/145 [00:21<01:24,  1.41it/s]plan: 
readable_plan: 
lines: ['unstack the yellow block from on top of the orange block', 'put-down the yellow block', 'pick-up the red block', 'stack the red block on top of the yellow block']
line: unstack the yellow blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (unstack yellow orange)
action (formatted): (unstack d c)
plan (updated): (unstack d c)

readable_plan (updated): (unstack yellow orange)

line: put-down the yellow blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (put-down yellow)
action (formatted): (put-down d)
plan (updated): (unstack d c)
(put-down d)

readable_plan (updated): (unstack yellow orange)
(put-down yellow)

line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (unstack d c)
(put-down d)
(pick-up a)

readable_plan (updated): (unstack yellow orange)
(put-down yellow)
(pick-up red)

line: stack the red blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (stack red yellow)
action (formatted): (stack a d)
plan (updated): (unstack d c)
(put-down d)
(pick-up a)
(stack a d)

readable_plan (updated): (unstack yellow orange)
(put-down yellow)
(pick-up red)
(stack red yellow)

plan: (unstack d c)
(put-down d)
(pick-up a)
(stack a d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack d c)
(put-down d)
(pick-up a)
(stack a d)

response: 


















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table', 'goal': 'the yellow block is on top of the red block', 'plan': '\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-58.pddl'}
output: unstack the yellow block from on top of the orange block
put down the yellow block
pick up the red block
stack the red block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.038461538461538464*****


data idx: 26

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table\nMy goal is to the blue block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.6933915615081787s, n_tokens: 225, speed: 0.003081740273369683s/token
blocksworld:  19%|█▊        | 27/145 [00:21<01:23,  1.41it/s]output: ['unstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the orange block from on top of the red block
put down the orange block
unstack the red block from on top of the blue block
put down the red block
pick up the blue block
stack the blue block on top of the orange block
text (after replacing pick up with pick-up): unstack the orange block from on top of the red block
put down the orange block
unstack the red block from on top of the blue block
put down the red block
pick-up the blue block
stack the blue block on top of the orange block
text (after replacing put down with put-down): unstack the orange block from on top of the red block
put-down the orange block
unstack the red block from on top of the blue block
put-down the red block
pick-up the blue block
stack the blue block on top of the orange block
text (after replacing stack with stack): unstack the orange block from on top of the red block
put-down the orange block
unstack the red block from on top of the blue block
put-down the red block
pick-up the blue block
stack the blue block on top of the orange block
text (after replacing unstack with unstack): unstack the orange block from on top of the red block
put-down the orange block
unstack the red block from on top of the blue block
put-down the red block
pick-up the blue block
stack the blue block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the orange block from on top of the red block', 'put-down the orange block', 'unstack the red block from on top of the blue block', 'put-down the red block', 'pick-up the blue block', 'stack the blue block on top of the orange block']
line: unstack the orange blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'red block']
readable_objs: ['orange', 'red']
objs (mapped): ['c', 'a']
readable_action: (unstack orange red)
action (formatted): (unstack c a)
plan (updated): (unstack c a)

readable_plan (updated): (unstack orange red)

line: put-down the orange blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (put-down orange)
action (formatted): (put-down c)
plan (updated): (unstack c a)
(put-down c)

readable_plan (updated): (unstack orange red)
(put-down orange)

line: unstack the red blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (unstack red blue)
action (formatted): (unstack a b)
plan (updated): (unstack c a)
(put-down c)
(unstack a b)

readable_plan (updated): (unstack orange red)
(put-down orange)
(unstack red blue)

line: put-down the red blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (put-down red)
action (formatted): (put-down a)
plan (updated): (unstack c a)
(put-down c)
(unstack a b)
(put-down a)

readable_plan (updated): (unstack orange red)
(put-down orange)
(unstack red blue)
(put-down red)

line: pick-up the blue blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (pick-up blue)
action (formatted): (pick-up b)
plan (updated): (unstack c a)
(put-down c)
(unstack a b)
(put-down a)
(pick-up b)

readable_plan (updated): (unstack orange red)
(put-down orange)
(unstack red blue)
(put-down red)
(pick-up blue)

line: stack the blue blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (stack blue orange)
action (formatted): (stack b c)
plan (updated): (unstack c a)
(put-down c)
(unstack a b)
(put-down a)
(pick-up b)
(stack b c)

readable_plan (updated): (unstack orange red)
(put-down orange)
(unstack red blue)
(put-down red)
(pick-up blue)
(stack blue orange)

plan: (unstack c a)
(put-down c)
(unstack a b)
(put-down a)
(pick-up b)
(stack b c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack c a)
(put-down c)
(unstack a b)
(put-down a)
(pick-up b)
(stack b c)

response: 

















































Checking plan: tmp_plan.txt
Plan executed successfully - checking goal
Goal not satisfied
Plan invalid


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table', 'goal': 'the blue block is on top of the red block', 'plan': '\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic_3/instance-38.pddl'}
output: unstack the orange block from on top of the red block
put down the orange block
unstack the red block from on top of the blue block
put down the red block
pick up the blue block
stack the blue block on top of the orange block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.037037037037037035*****


data idx: 27

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table\nMy goal is to the orange block is on top of the red block and the yellow block is on top of the orange block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.5983994007110596s, n_tokens: 141, speed: 0.0042439673809295s/token
output: ['pick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: pick up the red block
stack the red block on top of the blue block
pick up the yellow block
stack the yellow block on top of the orange block
text (after replacing pick up with pick-up): pick-up the red block
stack the red block on top of the blue block
pick-up the yellow block
stack the yellow block on top of the orange block
text (after replacing put down with put-down): pick-up the red block
stack the red block on top of the blue block
pick-up the yellow block
stack the yellow block on top of the orange block
text (after replacing stack with stack): pick-up the red block
stack the red block on top of the blue block
pick-up the yellow block
stack the yellow block on top of the orange block
text (after replacing unstack with unstack): pick-up the red block
stack the red block on top of the blue block
pick-up the yellow block
stack the yellow block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['pick-up the red block', 'stack the red block on top of the blue block', 'pick-up the yellow block', 'stack the yellow block on top of the orange block']
line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (pick-up a)

readable_plan (updated): (pick-up red)

line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (pick-up a)
(stack a b)

readable_plan (updated): (pick-up red)
(stack red blue)

line: pick-up the yellow blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (pick-up yellow)
action (formatted): (pick-up d)
plan (updated): (pick-up a)
(stack a b)
(pick-up d)

readable_plan (updated): (pick-up red)
(stack red blue)
(pick-up yellow)

line: stack the yellow blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (stack yellow orange)
action (formatted): (stack d c)
plan (updated): (pick-up a)
(stack a b)
(pick-up d)
(stack d c)

readable_plan (updated): (pick-up red)
(stack red blue)
(pick-up yellow)
(stack yellow orange)

plan: (pick-up a)
(stack a b)
(pick-up d)
(stack d c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
blocksworld:  19%|█▉        | 28/145 [00:22<01:19,  1.48it/s]plan: (pick-up a)
(stack a b)
(pick-up d)
(stack d c)

response: 





















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table', 'goal': 'the orange block is on top of the red block and the yellow block is on top of the orange block', 'plan': '\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-434.pddl'}
output: pick up the red block
stack the red block on top of the blue block
pick up the yellow block
stack the yellow block on top of the orange block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.03571428571428571*****


data idx: 28

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table\nMy goal is to the orange block is on top of the blue block and the yellow block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.9765820503234863s, n_tokens: 300, speed: 0.0032552735010782877s/token
output: ['unstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the blue block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the blue block from on top of the red block
put down the blue block
pick up the red block
stack the red block on top of the yellow block
unstack the yellow block from on top of the orange block
put down the yellow block
pick up the orange block
stack the orange block on top of the blue block
text (after replacing pick up with pick-up): unstack the blue block from on top of the red block
put down the blue block
pick-up the red block
stack the red block on top of the yellow block
unstack the yellow block from on top of the orange block
put down the yellow block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing put down with put-down): unstack the blue block from on top of the red block
put-down the blue block
pick-up the red block
stack the red block on top of the yellow block
unstack the yellow block from on top of the orange block
put-down the yellow block
pick-up the orange block
stack the orange block on top of the blue block
blocksworld:  20%|██        | 29/145 [00:23<01:29,  1.30it/s]text (after replacing stack with stack): unstack the blue block from on top of the red block
put-down the blue block
pick-up the red block
stack the red block on top of the yellow block
unstack the yellow block from on top of the orange block
put-down the yellow block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing unstack with unstack): unstack the blue block from on top of the red block
put-down the blue block
pick-up the red block
stack the red block on top of the yellow block
unstack the yellow block from on top of the orange block
put-down the yellow block
pick-up the orange block
stack the orange block on top of the blue block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the blue block from on top of the red block', 'put-down the blue block', 'pick-up the red block', 'stack the red block on top of the yellow block', 'unstack the yellow block from on top of the orange block', 'put-down the yellow block', 'pick-up the orange block', 'stack the orange block on top of the blue block']
line: unstack the blue blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (unstack blue red)
action (formatted): (unstack b a)
plan (updated): (unstack b a)

readable_plan (updated): (unstack blue red)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack b a)
(put-down b)

readable_plan (updated): (unstack blue red)
(put-down blue)

line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (unstack b a)
(put-down b)
(pick-up a)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up red)

line: stack the red blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (stack red yellow)
action (formatted): (stack a d)
plan (updated): (unstack b a)
(put-down b)
(pick-up a)
(stack a d)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up red)
(stack red yellow)

line: unstack the yellow blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (unstack yellow orange)
action (formatted): (unstack d c)
plan (updated): (unstack b a)
(put-down b)
(pick-up a)
(stack a d)
(unstack d c)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up red)
(stack red yellow)
(unstack yellow orange)

line: put-down the yellow blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (put-down yellow)
action (formatted): (put-down d)
plan (updated): (unstack b a)
(put-down b)
(pick-up a)
(stack a d)
(unstack d c)
(put-down d)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up red)
(stack red yellow)
(unstack yellow orange)
(put-down yellow)

line: pick-up the orange blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (pick-up orange)
action (formatted): (pick-up c)
plan (updated): (unstack b a)
(put-down b)
(pick-up a)
(stack a d)
(unstack d c)
(put-down d)
(pick-up c)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up red)
(stack red yellow)
(unstack yellow orange)
(put-down yellow)
(pick-up orange)

line: stack the orange blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'blue block']
readable_objs: ['orange', 'blue']
objs (mapped): ['c', 'b']
readable_action: (stack orange blue)
action (formatted): (stack c b)
plan (updated): (unstack b a)
(put-down b)
(pick-up a)
(stack a d)
(unstack d c)
(put-down d)
(pick-up c)
(stack c b)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up red)
(stack red yellow)
(unstack yellow orange)
(put-down yellow)
(pick-up orange)
(stack orange blue)

plan: (unstack b a)
(put-down b)
(pick-up a)
(stack a d)
(unstack d c)
(put-down d)
(pick-up c)
(stack c b)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack b a)
(put-down b)
(pick-up a)
(stack a d)
(unstack d c)
(put-down d)
(pick-up c)
(stack c b)

response: 





















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table', 'goal': 'the orange block is on top of the blue block and the yellow block is on top of the red block', 'plan': '\nunstack the blue block from on top of the red block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-391.pddl'}
output: unstack the blue block from on top of the red block
put down the blue block
pick up the red block
stack the red block on top of the yellow block
unstack the yellow block from on top of the orange block
put down the yellow block
pick up the orange block
stack the orange block on top of the blue block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.034482758620689655*****


data idx: 29

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table\nMy goal is to the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.7127346992492676s, n_tokens: 173, speed: 0.00411985375288594s/token
output: ['unstack the blue block from on top of the orange block\nput down the blue block\nstack the blue block on top of the yellow block\nstack the orange block on top of the red block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the blue block from on top of the orange block
put down the blue block
stack the blue block on top of the yellow block
stack the orange block on top of the red block
text (after replacing pick up with pick-up): unstack the blue block from on top of the orange block
put down the blue block
stack the blue block on top of the yellow block
stack the orange block on top of the red block
text (after replacing put down with put-down): unstack the blue block from on top of the orange block
put-down the blue block
stack the blue block on top of the yellow block
stack the orange block on top of the red block
text (after replacing stack with stack): unstack the blue block from on top of the orange block
put-down the blue block
stack the blue block on top of the yellow block
stack the orange block on top of the red block
text (after replacing unstack with unstack): unstack the blue block from on top of the orange block
put-down the blue block
stack the blue block on top of the yellow block
stack the orange block on top of the red block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the blue block from on top of the orange block', 'put-down the blue block', 'stack the blue block on top of the yellow block', 'stack the orange block on top of the red block']
line: unstack the blue blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (unstack blue orange)
action (formatted): (unstack b c)
plan (updated): (unstack b c)

readable_plan (updated): (unstack blue orange)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack b c)
(put-down b)

readable_plan (updated): (unstack blue orange)
(put-down blue)

line: stack the blue blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'yellow block']
readable_objs: ['blue', 'yellow']
objs (mapped): ['b', 'd']
readable_action: (stack blue yellow)
action (formatted): (stack b d)
plan (updated): (unstack b c)
(put-down b)
(stack b d)

readable_plan (updated): (unstack blue orange)
(put-down blue)
(stack blue yellow)

line: stack the orange blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'red block']
readable_objs: ['orange', 'red']
objs (mapped): ['c', 'a']
readable_action: (stack orange red)
action (formatted): (stack c a)
plan (updated): (unstack b c)
(put-down b)
(stack b d)
(stack c a)

blocksworld:  21%|██        | 30/145 [00:24<01:26,  1.32it/s]readable_plan (updated): (unstack blue orange)
(put-down blue)
(stack blue yellow)
(stack orange red)

plan: (unstack b c)
(put-down b)
(stack b d)
(stack c a)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack b c)
(put-down b)
(stack b d)
(stack c a)

response: 






















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table', 'goal': 'the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block', 'plan': '\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-390.pddl'}
output: unstack the blue block from on top of the orange block
put down the blue block
stack the blue block on top of the yellow block
stack the orange block on top of the red block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.03333333333333333*****


data idx: 30

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on the table\nMy goal is to the red block is on top of the orange block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.5513150691986084s, n_tokens: 113, speed: 0.0048788944176868s/token
output: ['pick up the red block\nstack the red block on top of the blue block\nstack the red block on top of the orange block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: pick up the red block
stack the red block on top of the blue block
stack the red block on top of the orange block
text (after replacing pick up with pick-up): pick-up the red block
stack the red block on top of the blue block
stack the red block on top of the orange block
text (after replacing put down with put-down): pick-up the red block
stack the red block on top of the blue block
stack the red block on top of the orange block
text (after replacing stack with stack): pick-up the red block
stack the red block on top of the blue block
stack the red block on top of the orange block
blocksworld:  21%|██▏       | 31/145 [00:24<01:19,  1.43it/s]text (after replacing unstack with unstack): pick-up the red block
stack the red block on top of the blue block
stack the red block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['pick-up the red block', 'stack the red block on top of the blue block', 'stack the red block on top of the orange block']
line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (pick-up a)

readable_plan (updated): (pick-up red)

line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (pick-up a)
(stack a b)

readable_plan (updated): (pick-up red)
(stack red blue)

line: stack the red blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'orange block']
readable_objs: ['red', 'orange']
objs (mapped): ['a', 'c']
readable_action: (stack red orange)
action (formatted): (stack a c)
plan (updated): (pick-up a)
(stack a b)
(stack a c)

readable_plan (updated): (pick-up red)
(stack red blue)
(stack red orange)

plan: (pick-up a)
(stack a b)
(stack a c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (pick-up a)
(stack a b)
(stack a c)

response: 

















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on the table', 'goal': 'the red block is on top of the orange block', 'plan': '\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic_3/instance-43.pddl'}
output: pick up the red block
stack the red block on top of the blue block
stack the red block on top of the orange block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.03225806451612903*****


data idx: 31

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table\nMy goal is to the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 1.0615339279174805s, n_tokens: 275, speed: 0.0038601233742453834s/token
blocksworld:  22%|██▏       | 32/145 [00:25<01:31,  1.23it/s]output: ['unstack the blue block from on top of the yellow block\nput down the blue block\nstack the blue block on top of the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\nstack the yellow block on top of the orange block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the blue block from on top of the yellow block
put down the blue block
stack the blue block on top of the orange block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
stack the yellow block on top of the orange block
text (after replacing pick up with pick-up): unstack the blue block from on top of the yellow block
put down the blue block
stack the blue block on top of the orange block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
stack the yellow block on top of the orange block
text (after replacing put down with put-down): unstack the blue block from on top of the yellow block
put-down the blue block
stack the blue block on top of the orange block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
stack the yellow block on top of the orange block
text (after replacing stack with stack): unstack the blue block from on top of the yellow block
put-down the blue block
stack the blue block on top of the orange block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
stack the yellow block on top of the orange block
text (after replacing unstack with unstack): unstack the blue block from on top of the yellow block
put-down the blue block
stack the blue block on top of the orange block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
stack the yellow block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the blue block from on top of the yellow block', 'put-down the blue block', 'stack the blue block on top of the orange block', 'unstack the red block from on top of the blue block', 'stack the red block on top of the yellow block', 'stack the yellow block on top of the orange block']
line: unstack the blue blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'yellow block']
readable_objs: ['blue', 'yellow']
objs (mapped): ['b', 'd']
readable_action: (unstack blue yellow)
action (formatted): (unstack b d)
plan (updated): (unstack b d)

readable_plan (updated): (unstack blue yellow)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack b d)
(put-down b)

readable_plan (updated): (unstack blue yellow)
(put-down blue)

line: stack the blue blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (stack blue orange)
action (formatted): (stack b c)
plan (updated): (unstack b d)
(put-down b)
(stack b c)

readable_plan (updated): (unstack blue yellow)
(put-down blue)
(stack blue orange)

line: unstack the red blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (unstack red blue)
action (formatted): (unstack a b)
plan (updated): (unstack b d)
(put-down b)
(stack b c)
(unstack a b)

readable_plan (updated): (unstack blue yellow)
(put-down blue)
(stack blue orange)
(unstack red blue)

line: stack the red blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (stack red yellow)
action (formatted): (stack a d)
plan (updated): (unstack b d)
(put-down b)
(stack b c)
(unstack a b)
(stack a d)

readable_plan (updated): (unstack blue yellow)
(put-down blue)
(stack blue orange)
(unstack red blue)
(stack red yellow)

line: stack the yellow blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (stack yellow orange)
action (formatted): (stack d c)
plan (updated): (unstack b d)
(put-down b)
(stack b c)
(unstack a b)
(stack a d)
(stack d c)

readable_plan (updated): (unstack blue yellow)
(put-down blue)
(stack blue orange)
(unstack red blue)
(stack red yellow)
(stack yellow orange)

plan: (unstack b d)
(put-down b)
(stack b c)
(unstack a b)
(stack a d)
(stack d c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack b d)
(put-down b)
(stack b c)
(unstack a b)
(stack a d)
(stack d c)

response: 





















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table', 'goal': 'the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block', 'plan': '\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-78.pddl'}
output: unstack the blue block from on top of the yellow block
put down the blue block
stack the blue block on top of the orange block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
stack the yellow block on top of the orange block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.03125*****


data idx: 32

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table\nMy goal is to the blue block is on top of the yellow block and the orange block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.48636746406555176s, n_tokens: 104, speed: 0.004676610231399536s/token
output: ['unstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
text (after replacing pick up with pick-up): unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
text (after replacing put down with put-down): unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
text (after replacing stack with stack): unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
text (after replacing unstack with unstack): unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the yellow block from on top of the blue block', 'stack the yellow block on top of the orange block']
line: unstack the yellow blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'blue block']
readable_objs: ['yellow', 'blue']
objs (mapped): ['d', 'b']
readable_action: (unstack yellow blue)
action (formatted): (unstack d b)
plan (updated): (unstack d b)

readable_plan (updated): (unstack yellow blue)

line: stack the yellow blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (stack yellow orange)
action (formatted): (stack d c)
plan (updated): (unstack d b)
(stack d c)

readable_plan (updated): (unstack yellow blue)
(stack yellow orange)

plan: (unstack d b)
(stack d c)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack d b)
(stack d c)

response: 



















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
blocksworld:  23%|██▎       | 33/145 [00:26<01:20,  1.40it/s]answer: {'init': 'the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table', 'goal': 'the blue block is on top of the yellow block and the orange block is on top of the blue block', 'plan': '\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-118.pddl'}
output: unstack the yellow block from on top of the blue block
stack the yellow block on top of the orange block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.030303030303030304*****


data idx: 33

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table and the blue block is on the table\nMy goal is to the red block is on top of the orange block and the blue block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.5129411220550537s, n_tokens: 113, speed: 0.0045393019650889705s/token
output: ['pick up the red block\nstack the red block on top of the orange block\nstack the blue block on top of the red block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: pick up the red block
stack the red block on top of the orange block
stack the blue block on top of the red block
text (after replacing pick up with pick-up): pick-up the red block
stack the red block on top of the orange block
stack the blue block on top of the red block
text (after replacing put down with put-down): pick-up the red block
stack the red block on top of the orange block
stack the blue block on top of the red block
text (after replacing stack with stack): pick-up the red block
stack the red block on top of the orange block
stack the blue block on top of the red block
text (after replacing unstack with unstack): pick-up the red block
stack the red block on top of the orange block
stack the blue block on top of the red block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['pick-up the red block', 'stack the red block on top of the orange block', 'stack the blue block on top of the red block']
line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (pick-up a)

readable_plan (updated): (pick-up red)

line: stack the red blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'orange block']
readable_objs: ['red', 'orange']
objs (mapped): ['a', 'c']
blocksworld:  23%|██▎       | 34/145 [00:26<01:13,  1.52it/s]readable_action: (stack red orange)
action (formatted): (stack a c)
plan (updated): (pick-up a)
(stack a c)

readable_plan (updated): (pick-up red)
(stack red orange)

line: stack the blue blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (stack blue red)
action (formatted): (stack b a)
plan (updated): (pick-up a)
(stack a c)
(stack b a)

readable_plan (updated): (pick-up red)
(stack red orange)
(stack blue red)

plan: (pick-up a)
(stack a c)
(stack b a)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (pick-up a)
(stack a c)
(stack b a)

response: 



















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table and the blue block is on the table', 'goal': 'the red block is on top of the orange block and the blue block is on top of the red block', 'plan': '\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic_3/instance-21.pddl'}
output: pick up the red block
stack the red block on top of the orange block
stack the blue block on top of the red block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.029411764705882353*****


data idx: 34

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table\nMy goal is to the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.8247232437133789s, n_tokens: 250, speed: 0.0032988929748535155s/token
output: ['unstack the blue block from on top of the orange block\nput down the blue block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the blue block from on top of the orange block
put down the blue block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
pick up the yellow block
stack the yellow block on top of the red block
blocksworld:  24%|██▍       | 35/145 [00:27<01:18,  1.41it/s]text (after replacing pick up with pick-up): unstack the blue block from on top of the orange block
put down the blue block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
pick-up the yellow block
stack the yellow block on top of the red block
text (after replacing put down with put-down): unstack the blue block from on top of the orange block
put-down the blue block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
pick-up the yellow block
stack the yellow block on top of the red block
text (after replacing stack with stack): unstack the blue block from on top of the orange block
put-down the blue block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
pick-up the yellow block
stack the yellow block on top of the red block
text (after replacing unstack with unstack): unstack the blue block from on top of the orange block
put-down the blue block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
pick-up the yellow block
stack the yellow block on top of the red block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the blue block from on top of the orange block', 'put-down the blue block', 'unstack the blue block from on top of the red block', 'stack the blue block on top of the orange block', 'pick-up the yellow block', 'stack the yellow block on top of the red block']
line: unstack the blue blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (unstack blue orange)
action (formatted): (unstack b c)
plan (updated): (unstack b c)

readable_plan (updated): (unstack blue orange)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack b c)
(put-down b)

readable_plan (updated): (unstack blue orange)
(put-down blue)

line: unstack the blue blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (unstack blue red)
action (formatted): (unstack b a)
plan (updated): (unstack b c)
(put-down b)
(unstack b a)

readable_plan (updated): (unstack blue orange)
(put-down blue)
(unstack blue red)

line: stack the blue blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'orange block']
readable_objs: ['blue', 'orange']
objs (mapped): ['b', 'c']
readable_action: (stack blue orange)
action (formatted): (stack b c)
plan (updated): (unstack b c)
(put-down b)
(unstack b a)
(stack b c)

readable_plan (updated): (unstack blue orange)
(put-down blue)
(unstack blue red)
(stack blue orange)

line: pick-up the yellow blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (pick-up yellow)
action (formatted): (pick-up d)
plan (updated): (unstack b c)
(put-down b)
(unstack b a)
(stack b c)
(pick-up d)

readable_plan (updated): (unstack blue orange)
(put-down blue)
(unstack blue red)
(stack blue orange)
(pick-up yellow)

line: stack the yellow blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'red block']
readable_objs: ['yellow', 'red']
objs (mapped): ['d', 'a']
readable_action: (stack yellow red)
action (formatted): (stack d a)
plan (updated): (unstack b c)
(put-down b)
(unstack b a)
(stack b c)
(pick-up d)
(stack d a)

readable_plan (updated): (unstack blue orange)
(put-down blue)
(unstack blue red)
(stack blue orange)
(pick-up yellow)
(stack yellow red)

plan: (unstack b c)
(put-down b)
(unstack b a)
(stack b c)
(pick-up d)
(stack d a)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack b c)
(put-down b)
(unstack b a)
(stack b c)
(pick-up d)
(stack d a)

response: 






















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table', 'goal': 'the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block', 'plan': '\npick up the red block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-206.pddl'}
output: unstack the blue block from on top of the orange block
put down the blue block
unstack the blue block from on top of the red block
stack the blue block on top of the orange block
pick up the yellow block
stack the yellow block on top of the red block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.02857142857142857*****


data idx: 35

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table\nMy goal is to the red block is on top of the blue block and the yellow block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.6408877372741699s, n_tokens: 220, speed: 0.002913126078518954s/token
output: ['unstack the yellow block from on top of the red block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the yellow block from on top of the red block
put down the yellow block
pick up the blue block
stack the blue block on top of the red block
pick up the orange block
stack the orange block on top of the blue block
text (after replacing pick up with pick-up): unstack the yellow block from on top of the red block
put down the yellow block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing put down with put-down): unstack the yellow block from on top of the red block
put-down the yellow block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing stack with stack): unstack the yellow block from on top of the red block
put-down the yellow block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the blue block
text (after replacing unstack with unstack): unstack the yellow block from on top of the red block
put-down the yellow block
pick-up the blue block
stack the blue block on top of the red block
pick-up the orange block
stack the orange block on top of the blue block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the yellow block from on top of the red block', 'put-down the yellow block', 'pick-up the blue block', 'stack the blue block on top of the red block', 'pick-up the orange block', 'stack the orange block on top of the blue block']
line: unstack the yellow blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'red block']
readable_objs: ['yellow', 'red']
objs (mapped): ['d', 'a']
readable_action: (unstack yellow red)
action (formatted): (unstack d a)
plan (updated): (unstack d a)

readable_plan (updated): (unstack yellow red)

line: put-down the yellow blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (put-down yellow)
action (formatted): (put-down d)
plan (updated): (unstack d a)
(put-down d)

readable_plan (updated): (unstack yellow red)
(put-down yellow)

line: pick-up the blue blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (pick-up blue)
action (formatted): (pick-up b)
plan (updated): (unstack d a)
(put-down d)
(pick-up b)

readable_plan (updated): (unstack yellow red)
(put-down yellow)
(pick-up blue)

line: stack the blue blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (stack blue red)
action (formatted): (stack b a)
plan (updated): (unstack d a)
(put-down d)
(pick-up b)
(stack b a)

blocksworld:  25%|██▍       | 36/145 [00:28<01:15,  1.44it/s]readable_plan (updated): (unstack yellow red)
(put-down yellow)
(pick-up blue)
(stack blue red)

line: pick-up the orange blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (pick-up orange)
action (formatted): (pick-up c)
plan (updated): (unstack d a)
(put-down d)
(pick-up b)
(stack b a)
(pick-up c)

readable_plan (updated): (unstack yellow red)
(put-down yellow)
(pick-up blue)
(stack blue red)
(pick-up orange)

line: stack the orange blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['orange block', 'blue block']
readable_objs: ['orange', 'blue']
objs (mapped): ['c', 'b']
readable_action: (stack orange blue)
action (formatted): (stack c b)
plan (updated): (unstack d a)
(put-down d)
(pick-up b)
(stack b a)
(pick-up c)
(stack c b)

readable_plan (updated): (unstack yellow red)
(put-down yellow)
(pick-up blue)
(stack blue red)
(pick-up orange)
(stack orange blue)

plan: (unstack d a)
(put-down d)
(pick-up b)
(stack b a)
(pick-up c)
(stack c b)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack d a)
(put-down d)
(pick-up b)
(stack b a)
(pick-up c)
(stack c b)

response: 




















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table', 'goal': 'the red block is on top of the blue block and the yellow block is on top of the red block', 'plan': '\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-321.pddl'}
output: unstack the yellow block from on top of the red block
put down the yellow block
pick up the blue block
stack the blue block on top of the red block
pick up the orange block
stack the orange block on top of the blue block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.027777777777777776*****


data idx: 36

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table\nMy goal is to the red block is on top of the orange block and the yellow block is on top of the blue block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.8223495483398438s, n_tokens: 246, speed: 0.0033428843428448935s/token
output: ['unstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block']


============================================================evaluate start============================================================
blocksworld:  26%|██▌       | 37/145 [00:29<01:19,  1.36it/s]============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the yellow block from on top of the red block
put down the yellow block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
pick up the blue block
stack the blue block on top of the red block
text (after replacing pick up with pick-up): unstack the yellow block from on top of the red block
put down the yellow block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
pick-up the blue block
stack the blue block on top of the red block
text (after replacing put down with put-down): unstack the yellow block from on top of the red block
put-down the yellow block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
pick-up the blue block
stack the blue block on top of the red block
text (after replacing stack with stack): unstack the yellow block from on top of the red block
put-down the yellow block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
pick-up the blue block
stack the blue block on top of the red block
text (after replacing unstack with unstack): unstack the yellow block from on top of the red block
put-down the yellow block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
pick-up the blue block
stack the blue block on top of the red block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the yellow block from on top of the red block', 'put-down the yellow block', 'unstack the red block from on top of the blue block', 'stack the red block on top of the yellow block', 'pick-up the blue block', 'stack the blue block on top of the red block']
line: unstack the yellow blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'red block']
readable_objs: ['yellow', 'red']
objs (mapped): ['d', 'a']
readable_action: (unstack yellow red)
action (formatted): (unstack d a)
plan (updated): (unstack d a)

readable_plan (updated): (unstack yellow red)

line: put-down the yellow blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (put-down yellow)
action (formatted): (put-down d)
plan (updated): (unstack d a)
(put-down d)

readable_plan (updated): (unstack yellow red)
(put-down yellow)

line: unstack the red blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (unstack red blue)
action (formatted): (unstack a b)
plan (updated): (unstack d a)
(put-down d)
(unstack a b)

readable_plan (updated): (unstack yellow red)
(put-down yellow)
(unstack red blue)

line: stack the red blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (stack red yellow)
action (formatted): (stack a d)
plan (updated): (unstack d a)
(put-down d)
(unstack a b)
(stack a d)

readable_plan (updated): (unstack yellow red)
(put-down yellow)
(unstack red blue)
(stack red yellow)

line: pick-up the blue blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (pick-up blue)
action (formatted): (pick-up b)
plan (updated): (unstack d a)
(put-down d)
(unstack a b)
(stack a d)
(pick-up b)

readable_plan (updated): (unstack yellow red)
(put-down yellow)
(unstack red blue)
(stack red yellow)
(pick-up blue)

line: stack the blue blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (stack blue red)
action (formatted): (stack b a)
plan (updated): (unstack d a)
(put-down d)
(unstack a b)
(stack a d)
(pick-up b)
(stack b a)

readable_plan (updated): (unstack yellow red)
(put-down yellow)
(unstack red blue)
(stack red yellow)
(pick-up blue)
(stack blue red)

plan: (unstack d a)
(put-down d)
(unstack a b)
(stack a d)
(pick-up b)
(stack b a)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack d a)
(put-down d)
(unstack a b)
(stack a d)
(pick-up b)
(stack b a)

response: 




















































Checking plan: tmp_plan.txt
Plan executed successfully - checking goal
Goal not satisfied
Plan invalid


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table', 'goal': 'the red block is on top of the orange block and the yellow block is on top of the blue block', 'plan': '\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-254.pddl'}
output: unstack the yellow block from on top of the red block
put down the yellow block
unstack the red block from on top of the blue block
stack the red block on top of the yellow block
pick up the blue block
stack the blue block on top of the red block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.02702702702702703*****


data idx: 37
blocksworld:  26%|██▌       | 38/145 [00:29<01:07,  1.57it/s]
input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table\nMy goal is to the blue block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.39142727851867676s, n_tokens: 44, speed: 0.008896074511788109s/token
output: ['stack the red block on top of the blue block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: stack the red block on top of the blue block
text (after replacing pick up with pick-up): stack the red block on top of the blue block
text (after replacing put down with put-down): stack the red block on top of the blue block
text (after replacing stack with stack): stack the red block on top of the blue block
text (after replacing unstack with unstack): stack the red block on top of the blue block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['stack the red block on top of the blue block']
line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (stack a b)

readable_plan (updated): (stack red blue)

plan: (stack a b)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (stack a b)

response: 

















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table', 'goal': 'the blue block is on top of the red block', 'plan': '\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic_3/instance-50.pddl'}
output: stack the red block on top of the blue block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.02631578947368421*****


data idx: 38

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table\nMy goal is to the red block is on top of the yellow block and the blue block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.6348161697387695s, n_tokens: 217, speed: 0.002925420137045021s/token
output: ['unstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the blue block from on top of the red block
put down the blue block
pick up the yellow block
stack the yellow block on top of the blue block
pick up the red block
stack the red block on top of the yellow block
text (after replacing pick up with pick-up): unstack the blue block from on top of the red block
put down the blue block
pick-up the yellow block
stack the yellow block on top of the blue block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing put down with put-down): unstack the blue block from on top of the red block
put-down the blue block
pick-up the yellow block
stack the yellow block on top of the blue block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing stack with stack): unstack the blue block from on top of the red block
put-down the blue block
pick-up the yellow block
stack the yellow block on top of the blue block
pick-up the red block
stack the red block on top of the yellow block
text (after replacing unstack with unstack): unstack the blue block from on top of the red block
put-down the blue block
pick-up the yellow block
stack the yellow block on top of the blue block
pick-up the red block
stack the red block on top of the yellow block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the blue block from on top of the red block', 'put-down the blue block', 'pick-up the yellow block', 'stack the yellow block on top of the blue block', 'pick-up the red block', 'stack the red block on top of the yellow block']
line: unstack the blue blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['blue block', 'red block']
readable_objs: ['blue', 'red']
objs (mapped): ['b', 'a']
readable_action: (unstack blue red)
action (formatted): (unstack b a)
plan (updated): (unstack b a)

readable_plan (updated): (unstack blue red)

line: put-down the blue blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['blue block']
readable_objs: ['blue']
objs (mapped): ['b']
readable_action: (put-down blue)
action (formatted): (put-down b)
plan (updated): (unstack b a)
(put-down b)

readable_plan (updated): (unstack blue red)
(put-down blue)

line: pick-up the yellow blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['yellow block']
readable_objs: ['yellow']
objs (mapped): ['d']
readable_action: (pick-up yellow)
action (formatted): (pick-up d)
plan (updated): (unstack b a)
(put-down b)
(pick-up d)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up yellow)

line: stack the yellow blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'blue block']
readable_objs: ['yellow', 'blue']
objs (mapped): ['d', 'b']
blocksworld:  27%|██▋       | 39/145 [00:30<01:07,  1.57it/s]readable_action: (stack yellow blue)
action (formatted): (stack d b)
plan (updated): (unstack b a)
(put-down b)
(pick-up d)
(stack d b)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up yellow)
(stack yellow blue)

line: pick-up the red blockk
action_list: [True, False, False, False]
action: pick-up
n_objs: 1
objs: ['red block']
readable_objs: ['red']
objs (mapped): ['a']
readable_action: (pick-up red)
action (formatted): (pick-up a)
plan (updated): (unstack b a)
(put-down b)
(pick-up d)
(stack d b)
(pick-up a)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up yellow)
(stack yellow blue)
(pick-up red)

line: stack the red blockk on top of the yellow blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (stack red yellow)
action (formatted): (stack a d)
plan (updated): (unstack b a)
(put-down b)
(pick-up d)
(stack d b)
(pick-up a)
(stack a d)

readable_plan (updated): (unstack blue red)
(put-down blue)
(pick-up yellow)
(stack yellow blue)
(pick-up red)
(stack red yellow)

plan: (unstack b a)
(put-down b)
(pick-up d)
(stack d b)
(pick-up a)
(stack a d)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack b a)
(put-down b)
(pick-up d)
(stack d b)
(pick-up a)
(stack a d)

response: 




















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table', 'goal': 'the red block is on top of the yellow block and the blue block is on top of the red block', 'plan': '\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-317.pddl'}
output: unstack the blue block from on top of the red block
put down the blue block
pick up the yellow block
stack the yellow block on top of the blue block
pick up the red block
stack the red block on top of the yellow block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.02564102564102564*****


data idx: 39

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table\nMy goal is to the red block is on top of the orange block and the orange block is on top of the yellow block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.7252113819122314s, n_tokens: 229, speed: 0.0031668619297477354s/token
output: ['unstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\nstack the red block on top of the blue block']


============================================================evaluate start============================================================
blocksworld:  28%|██▊       | 40/145 [00:30<01:10,  1.50it/s]============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the orange block from on top of the blue block
put down the orange block
stack the red block on top of the blue block
text (after replacing pick up with pick-up): unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the orange block from on top of the blue block
put down the orange block
stack the red block on top of the blue block
text (after replacing put down with put-down): unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the orange block from on top of the blue block
put-down the orange block
stack the red block on top of the blue block
text (after replacing stack with stack): unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the orange block from on top of the blue block
put-down the orange block
stack the red block on top of the blue block
text (after replacing unstack with unstack): unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the orange block from on top of the blue block
put-down the orange block
stack the red block on top of the blue block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the yellow block from on top of the orange block', 'stack the yellow block on top of the red block', 'unstack the orange block from on top of the blue block', 'put-down the orange block', 'stack the red block on top of the blue block']
line: unstack the yellow blockk from on top of the orange blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'orange block']
readable_objs: ['yellow', 'orange']
objs (mapped): ['d', 'c']
readable_action: (unstack yellow orange)
action (formatted): (unstack d c)
plan (updated): (unstack d c)

readable_plan (updated): (unstack yellow orange)

line: stack the yellow blockk on top of the red blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'red block']
readable_objs: ['yellow', 'red']
objs (mapped): ['d', 'a']
readable_action: (stack yellow red)
action (formatted): (stack d a)
plan (updated): (unstack d c)
(stack d a)

readable_plan (updated): (unstack yellow orange)
(stack yellow red)

line: unstack the orange blockk from on top of the blue blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['orange block', 'blue block']
readable_objs: ['orange', 'blue']
objs (mapped): ['c', 'b']
readable_action: (unstack orange blue)
action (formatted): (unstack c b)
plan (updated): (unstack d c)
(stack d a)
(unstack c b)

readable_plan (updated): (unstack yellow orange)
(stack yellow red)
(unstack orange blue)

line: put-down the orange blockk
action_list: [False, True, False, False]
action: put-down
n_objs: 1
objs: ['orange block']
readable_objs: ['orange']
objs (mapped): ['c']
readable_action: (put-down orange)
action (formatted): (put-down c)
plan (updated): (unstack d c)
(stack d a)
(unstack c b)
(put-down c)

readable_plan (updated): (unstack yellow orange)
(stack yellow red)
(unstack orange blue)
(put-down orange)

line: stack the red blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['red block', 'blue block']
readable_objs: ['red', 'blue']
objs (mapped): ['a', 'b']
readable_action: (stack red blue)
action (formatted): (stack a b)
plan (updated): (unstack d c)
(stack d a)
(unstack c b)
(put-down c)
(stack a b)

readable_plan (updated): (unstack yellow orange)
(stack yellow red)
(unstack orange blue)
(put-down orange)
(stack red blue)

plan: (unstack d c)
(stack d a)
(unstack c b)
(put-down c)
(stack a b)

[+]: Saving plan in tmp_plan.txt
==================================================text_to_plan_blocksworld结束！==================================================
============================================================validate_plan开始============================================================
plan: (unstack d c)
(stack d a)
(unstack c b)
(put-down c)
(stack a b)

response: 




















































Checking plan: tmp_plan.txt

Plan failed to execute


Failed plans:
 tmp_plan.txt 

============================================================validate_plan结束============================================================
answer: {'init': 'the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table', 'goal': 'the red block is on top of the orange block and the orange block is on top of the yellow block', 'plan': '\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n', 'question': '\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\n', 'instance_file': 'LLMs-Planning/llm_planning_analysis/instances/blocksworld/generated_basic/instance-385.pddl'}
output: unstack the yellow block from on top of the orange block
stack the yellow block on top of the red block
unstack the orange block from on top of the blue block
put down the orange block
stack the red block on top of the blue block
correct: False
============================================================evaluate end============================================================


*****current accuracy: 0.025*****


data idx: 40

input: ['I am playing with a set of blocks where I need to arrange the blocks into stacks. Here are the actions I can do\n\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\n\nI have the following restrictions on my actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking the block is clear.\nOnce I put down or stack a block, my hand becomes empty.\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table\nMy goal is to the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block\n\nMy plan is as follows:\n\n[PLAN]\n']
generate takes: 0.88496994972229s, n_tokens: 202, speed: 0.004381039355060842s/token
output: ['unstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block']


============================================================evaluate start============================================================
============================================================text_to_plan_blocksworldstart============================================================
actions_params_dict: {'pick-up': pick-up(?ob: object), 'put-down': put-down(?ob: object), 'stack': stack(?ob: object,?underob: object), 'unstack': unstack(?ob: object,?underob: object)}
raw_actions: ['pick-up', 'put-down', 'stack', 'unstack']
text_actions: ['pick up', 'put down', 'stack', 'unstack']
text: unstack the yellow block from on top of the red block
stack the yellow block on top of the blue block
unstack the red block from on top of the yellow block
stack the red block on top of the orange block
text (after replacing pick up with pick-up): unstack the yellow block from on top of the red block
stack the yellow block on top of the blue block
unstack the red block from on top of the yellow block
stack the red block on top of the orange block
text (after replacing put down with put-down): unstack the yellow block from on top of the red block
stack the yellow block on top of the blue block
unstack the red block from on top of the yellow block
stack the red block on top of the orange block
text (after replacing stack with stack): unstack the yellow block from on top of the red block
stack the yellow block on top of the blue block
unstack the red block from on top of the yellow block
stack the red block on top of the orange block
text (after replacing unstack with unstack): unstack the yellow block from on top of the red block
stack the yellow block on top of the blue block
unstack the red block from on top of the yellow block
stack the red block on top of the orange block
object_names: ['red block', 'blue block', 'orange block', 'yellow block', 'white block', 'magenta block', 'black block', 'cyan block', 'green block', 'violet block', 'silver block', 'gold block']
plan: 
readable_plan: 
lines: ['unstack the yellow block from on top of the red block', 'stack the yellow block on top of the blue block', 'unstack the red block from on top of the yellow block', 'stack the red block on top of the orange block']
line: unstack the yellow blockk from on top of the red blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['yellow block', 'red block']
readable_objs: ['yellow', 'red']
objs (mapped): ['d', 'a']
readable_action: (unstack yellow red)
action (formatted): (unstack d a)
plan (updated): (unstack d a)

readable_plan (updated): (unstack yellow red)

line: stack the yellow blockk on top of the blue blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
objs: ['yellow block', 'blue block']
readable_objs: ['yellow', 'blue']
objs (mapped): ['d', 'b']
readable_action: (stack yellow blue)
action (formatted): (stack d b)
plan (updated): (unstack d a)
(stack d b)

readable_plan (updated): (unstack yellow red)
(stack yellow blue)

line: unstack the red blockk from on top of the yellow blockk
action_list: [False, False, False, True]
action: unstack
n_objs: 2
objs: ['red block', 'yellow block']
readable_objs: ['red', 'yellow']
objs (mapped): ['a', 'd']
readable_action: (unstack red yellow)
action (formatted): (unstack a d)
plan (updated): (unstack d a)
(stack d b)
(unstack a d)

readable_plan (updated): (unstack yellow red)
(stack yellow blue)
(unstack red yellow)

line: stack the red blockk on top of the orange blockk
action_list: [False, False, True, False]
action: stack
n_objs: 2
blocksworld:  28%|██▊       | 41/145 [00:31<01:16,  1.36it/s]